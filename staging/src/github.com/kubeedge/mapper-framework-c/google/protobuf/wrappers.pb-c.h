/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: google/protobuf/wrappers.proto */

#ifndef PROTOBUF_C_google_2fprotobuf_2fwrappers_2eproto__INCLUDED
#define PROTOBUF_C_google_2fprotobuf_2fwrappers_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif


typedef struct Google__Protobuf__DoubleValue Google__Protobuf__DoubleValue;
typedef struct Google__Protobuf__FloatValue Google__Protobuf__FloatValue;
typedef struct Google__Protobuf__Int64Value Google__Protobuf__Int64Value;
typedef struct Google__Protobuf__UInt64Value Google__Protobuf__UInt64Value;
typedef struct Google__Protobuf__Int32Value Google__Protobuf__Int32Value;
typedef struct Google__Protobuf__UInt32Value Google__Protobuf__UInt32Value;
typedef struct Google__Protobuf__BoolValue Google__Protobuf__BoolValue;
typedef struct Google__Protobuf__StringValue Google__Protobuf__StringValue;
typedef struct Google__Protobuf__BytesValue Google__Protobuf__BytesValue;


/* --- enums --- */


/* --- messages --- */

/*
 * Wrapper message for `double`.
 * The JSON representation for `DoubleValue` is JSON number.
 * Not recommended for use in new APIs, but still useful for legacy APIs and
 * has no plan to be removed.
 */
struct  Google__Protobuf__DoubleValue
{
  ProtobufCMessage base;
  /*
   * The double value.
   */
  double value;
};
#define GOOGLE__PROTOBUF__DOUBLE_VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&google__protobuf__double_value__descriptor) \
, 0 }


/*
 * Wrapper message for `float`.
 * The JSON representation for `FloatValue` is JSON number.
 * Not recommended for use in new APIs, but still useful for legacy APIs and
 * has no plan to be removed.
 */
struct  Google__Protobuf__FloatValue
{
  ProtobufCMessage base;
  /*
   * The float value.
   */
  float value;
};
#define GOOGLE__PROTOBUF__FLOAT_VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&google__protobuf__float_value__descriptor) \
, 0 }


/*
 * Wrapper message for `int64`.
 * The JSON representation for `Int64Value` is JSON string.
 * Not recommended for use in new APIs, but still useful for legacy APIs and
 * has no plan to be removed.
 */
struct  Google__Protobuf__Int64Value
{
  ProtobufCMessage base;
  /*
   * The int64 value.
   */
  int64_t value;
};
#define GOOGLE__PROTOBUF__INT64_VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&google__protobuf__int64_value__descriptor) \
, 0 }


/*
 * Wrapper message for `uint64`.
 * The JSON representation for `UInt64Value` is JSON string.
 * Not recommended for use in new APIs, but still useful for legacy APIs and
 * has no plan to be removed.
 */
struct  Google__Protobuf__UInt64Value
{
  ProtobufCMessage base;
  /*
   * The uint64 value.
   */
  uint64_t value;
};
#define GOOGLE__PROTOBUF__UINT64_VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&google__protobuf__uint64_value__descriptor) \
, 0 }


/*
 * Wrapper message for `int32`.
 * The JSON representation for `Int32Value` is JSON number.
 * Not recommended for use in new APIs, but still useful for legacy APIs and
 * has no plan to be removed.
 */
struct  Google__Protobuf__Int32Value
{
  ProtobufCMessage base;
  /*
   * The int32 value.
   */
  int32_t value;
};
#define GOOGLE__PROTOBUF__INT32_VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&google__protobuf__int32_value__descriptor) \
, 0 }


/*
 * Wrapper message for `uint32`.
 * The JSON representation for `UInt32Value` is JSON number.
 * Not recommended for use in new APIs, but still useful for legacy APIs and
 * has no plan to be removed.
 */
struct  Google__Protobuf__UInt32Value
{
  ProtobufCMessage base;
  /*
   * The uint32 value.
   */
  uint32_t value;
};
#define GOOGLE__PROTOBUF__UINT32_VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&google__protobuf__uint32_value__descriptor) \
, 0 }


/*
 * Wrapper message for `bool`.
 * The JSON representation for `BoolValue` is JSON `true` and `false`.
 * Not recommended for use in new APIs, but still useful for legacy APIs and
 * has no plan to be removed.
 */
struct  Google__Protobuf__BoolValue
{
  ProtobufCMessage base;
  /*
   * The bool value.
   */
  protobuf_c_boolean value;
};
#define GOOGLE__PROTOBUF__BOOL_VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&google__protobuf__bool_value__descriptor) \
, 0 }


/*
 * Wrapper message for `string`.
 * The JSON representation for `StringValue` is JSON string.
 * Not recommended for use in new APIs, but still useful for legacy APIs and
 * has no plan to be removed.
 */
struct  Google__Protobuf__StringValue
{
  ProtobufCMessage base;
  /*
   * The string value.
   */
  char *value;
};
#define GOOGLE__PROTOBUF__STRING_VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&google__protobuf__string_value__descriptor) \
, (char *)protobuf_c_empty_string }


/*
 * Wrapper message for `bytes`.
 * The JSON representation for `BytesValue` is JSON string.
 * Not recommended for use in new APIs, but still useful for legacy APIs and
 * has no plan to be removed.
 */
struct  Google__Protobuf__BytesValue
{
  ProtobufCMessage base;
  /*
   * The bytes value.
   */
  ProtobufCBinaryData value;
};
#define GOOGLE__PROTOBUF__BYTES_VALUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&google__protobuf__bytes_value__descriptor) \
, {0,NULL} }


/* Google__Protobuf__DoubleValue methods */
void   google__protobuf__double_value__init
                     (Google__Protobuf__DoubleValue         *message);
size_t google__protobuf__double_value__get_packed_size
                     (const Google__Protobuf__DoubleValue   *message);
size_t google__protobuf__double_value__pack
                     (const Google__Protobuf__DoubleValue   *message,
                      uint8_t             *out);
size_t google__protobuf__double_value__pack_to_buffer
                     (const Google__Protobuf__DoubleValue   *message,
                      ProtobufCBuffer     *buffer);
Google__Protobuf__DoubleValue *
       google__protobuf__double_value__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   google__protobuf__double_value__free_unpacked
                     (Google__Protobuf__DoubleValue *message,
                      ProtobufCAllocator *allocator);
/* Google__Protobuf__FloatValue methods */
void   google__protobuf__float_value__init
                     (Google__Protobuf__FloatValue         *message);
size_t google__protobuf__float_value__get_packed_size
                     (const Google__Protobuf__FloatValue   *message);
size_t google__protobuf__float_value__pack
                     (const Google__Protobuf__FloatValue   *message,
                      uint8_t             *out);
size_t google__protobuf__float_value__pack_to_buffer
                     (const Google__Protobuf__FloatValue   *message,
                      ProtobufCBuffer     *buffer);
Google__Protobuf__FloatValue *
       google__protobuf__float_value__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   google__protobuf__float_value__free_unpacked
                     (Google__Protobuf__FloatValue *message,
                      ProtobufCAllocator *allocator);
/* Google__Protobuf__Int64Value methods */
void   google__protobuf__int64_value__init
                     (Google__Protobuf__Int64Value         *message);
size_t google__protobuf__int64_value__get_packed_size
                     (const Google__Protobuf__Int64Value   *message);
size_t google__protobuf__int64_value__pack
                     (const Google__Protobuf__Int64Value   *message,
                      uint8_t             *out);
size_t google__protobuf__int64_value__pack_to_buffer
                     (const Google__Protobuf__Int64Value   *message,
                      ProtobufCBuffer     *buffer);
Google__Protobuf__Int64Value *
       google__protobuf__int64_value__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   google__protobuf__int64_value__free_unpacked
                     (Google__Protobuf__Int64Value *message,
                      ProtobufCAllocator *allocator);
/* Google__Protobuf__UInt64Value methods */
void   google__protobuf__uint64_value__init
                     (Google__Protobuf__UInt64Value         *message);
size_t google__protobuf__uint64_value__get_packed_size
                     (const Google__Protobuf__UInt64Value   *message);
size_t google__protobuf__uint64_value__pack
                     (const Google__Protobuf__UInt64Value   *message,
                      uint8_t             *out);
size_t google__protobuf__uint64_value__pack_to_buffer
                     (const Google__Protobuf__UInt64Value   *message,
                      ProtobufCBuffer     *buffer);
Google__Protobuf__UInt64Value *
       google__protobuf__uint64_value__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   google__protobuf__uint64_value__free_unpacked
                     (Google__Protobuf__UInt64Value *message,
                      ProtobufCAllocator *allocator);
/* Google__Protobuf__Int32Value methods */
void   google__protobuf__int32_value__init
                     (Google__Protobuf__Int32Value         *message);
size_t google__protobuf__int32_value__get_packed_size
                     (const Google__Protobuf__Int32Value   *message);
size_t google__protobuf__int32_value__pack
                     (const Google__Protobuf__Int32Value   *message,
                      uint8_t             *out);
size_t google__protobuf__int32_value__pack_to_buffer
                     (const Google__Protobuf__Int32Value   *message,
                      ProtobufCBuffer     *buffer);
Google__Protobuf__Int32Value *
       google__protobuf__int32_value__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   google__protobuf__int32_value__free_unpacked
                     (Google__Protobuf__Int32Value *message,
                      ProtobufCAllocator *allocator);
/* Google__Protobuf__UInt32Value methods */
void   google__protobuf__uint32_value__init
                     (Google__Protobuf__UInt32Value         *message);
size_t google__protobuf__uint32_value__get_packed_size
                     (const Google__Protobuf__UInt32Value   *message);
size_t google__protobuf__uint32_value__pack
                     (const Google__Protobuf__UInt32Value   *message,
                      uint8_t             *out);
size_t google__protobuf__uint32_value__pack_to_buffer
                     (const Google__Protobuf__UInt32Value   *message,
                      ProtobufCBuffer     *buffer);
Google__Protobuf__UInt32Value *
       google__protobuf__uint32_value__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   google__protobuf__uint32_value__free_unpacked
                     (Google__Protobuf__UInt32Value *message,
                      ProtobufCAllocator *allocator);
/* Google__Protobuf__BoolValue methods */
void   google__protobuf__bool_value__init
                     (Google__Protobuf__BoolValue         *message);
size_t google__protobuf__bool_value__get_packed_size
                     (const Google__Protobuf__BoolValue   *message);
size_t google__protobuf__bool_value__pack
                     (const Google__Protobuf__BoolValue   *message,
                      uint8_t             *out);
size_t google__protobuf__bool_value__pack_to_buffer
                     (const Google__Protobuf__BoolValue   *message,
                      ProtobufCBuffer     *buffer);
Google__Protobuf__BoolValue *
       google__protobuf__bool_value__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   google__protobuf__bool_value__free_unpacked
                     (Google__Protobuf__BoolValue *message,
                      ProtobufCAllocator *allocator);
/* Google__Protobuf__StringValue methods */
void   google__protobuf__string_value__init
                     (Google__Protobuf__StringValue         *message);
size_t google__protobuf__string_value__get_packed_size
                     (const Google__Protobuf__StringValue   *message);
size_t google__protobuf__string_value__pack
                     (const Google__Protobuf__StringValue   *message,
                      uint8_t             *out);
size_t google__protobuf__string_value__pack_to_buffer
                     (const Google__Protobuf__StringValue   *message,
                      ProtobufCBuffer     *buffer);
Google__Protobuf__StringValue *
       google__protobuf__string_value__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   google__protobuf__string_value__free_unpacked
                     (Google__Protobuf__StringValue *message,
                      ProtobufCAllocator *allocator);
/* Google__Protobuf__BytesValue methods */
void   google__protobuf__bytes_value__init
                     (Google__Protobuf__BytesValue         *message);
size_t google__protobuf__bytes_value__get_packed_size
                     (const Google__Protobuf__BytesValue   *message);
size_t google__protobuf__bytes_value__pack
                     (const Google__Protobuf__BytesValue   *message,
                      uint8_t             *out);
size_t google__protobuf__bytes_value__pack_to_buffer
                     (const Google__Protobuf__BytesValue   *message,
                      ProtobufCBuffer     *buffer);
Google__Protobuf__BytesValue *
       google__protobuf__bytes_value__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   google__protobuf__bytes_value__free_unpacked
                     (Google__Protobuf__BytesValue *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Google__Protobuf__DoubleValue_Closure)
                 (const Google__Protobuf__DoubleValue *message,
                  void *closure_data);
typedef void (*Google__Protobuf__FloatValue_Closure)
                 (const Google__Protobuf__FloatValue *message,
                  void *closure_data);
typedef void (*Google__Protobuf__Int64Value_Closure)
                 (const Google__Protobuf__Int64Value *message,
                  void *closure_data);
typedef void (*Google__Protobuf__UInt64Value_Closure)
                 (const Google__Protobuf__UInt64Value *message,
                  void *closure_data);
typedef void (*Google__Protobuf__Int32Value_Closure)
                 (const Google__Protobuf__Int32Value *message,
                  void *closure_data);
typedef void (*Google__Protobuf__UInt32Value_Closure)
                 (const Google__Protobuf__UInt32Value *message,
                  void *closure_data);
typedef void (*Google__Protobuf__BoolValue_Closure)
                 (const Google__Protobuf__BoolValue *message,
                  void *closure_data);
typedef void (*Google__Protobuf__StringValue_Closure)
                 (const Google__Protobuf__StringValue *message,
                  void *closure_data);
typedef void (*Google__Protobuf__BytesValue_Closure)
                 (const Google__Protobuf__BytesValue *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor google__protobuf__double_value__descriptor;
extern const ProtobufCMessageDescriptor google__protobuf__float_value__descriptor;
extern const ProtobufCMessageDescriptor google__protobuf__int64_value__descriptor;
extern const ProtobufCMessageDescriptor google__protobuf__uint64_value__descriptor;
extern const ProtobufCMessageDescriptor google__protobuf__int32_value__descriptor;
extern const ProtobufCMessageDescriptor google__protobuf__uint32_value__descriptor;
extern const ProtobufCMessageDescriptor google__protobuf__bool_value__descriptor;
extern const ProtobufCMessageDescriptor google__protobuf__string_value__descriptor;
extern const ProtobufCMessageDescriptor google__protobuf__bytes_value__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_google_2fprotobuf_2fwrappers_2eproto__INCLUDED */
