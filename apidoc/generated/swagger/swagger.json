{
  "swagger": "2.0",
  "info": {
    "description": "Kubeedge is Open, Multi-Cloud, Multi-Cluster Kubernetes Orchestration System. For more information, please see https://github.com/Kubeedge/Kubeedge.",
    "title": "Kubeedge OpenAPI",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "unversioned"
  },
  "paths": {
    "/apis/": {
      "get": {
        "description": "get available API versions",
        "consumes": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "apis"
        ],
        "operationId": "getAPIVersions",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList"
            }
          }
        }
      }
    },
    "/apis/apps.kubeedge.io/": {
      "get": {
        "description": "get information of a group",
        "consumes": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "appsKubeedgeIo"
        ],
        "operationId": "getAppsKubeedgeIoAPIGroup",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
            }
          }
        }
      }
    },
    "/apis/apps.kubeedge.io/v1alpha1/": {
      "get": {
        "description": "get available resources",
        "consumes": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "appsKubeedgeIo_v1alpha1"
        ],
        "operationId": "getAppsKubeedgeIoV1alpha1APIResources",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList"
            }
          }
        }
      }
    },
    "/apis/apps.kubeedge.io/v1alpha1/edgeapplications": {
      "get": {
        "description": "list or watch objects of kind EdgeApplication",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "appsKubeedgeIo_v1alpha1"
        ],
        "operationId": "listAppsKubeedgeIoV1alpha1EdgeApplicationForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.EdgeApplicationList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "apps.kubeedge.io",
          "version": "v1alpha1",
          "kind": "EdgeApplication"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/apps.kubeedge.io/v1alpha1/namespaces/{namespace}/edgeapplications": {
      "get": {
        "description": "list or watch objects of kind EdgeApplication",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "appsKubeedgeIo_v1alpha1"
        ],
        "operationId": "listAppsKubeedgeIoV1alpha1NamespacedEdgeApplication",
        "parameters": [
          {
            "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
          },
          {
            "$ref": "#/parameters/continue-QfD61s0i"
          },
          {
            "$ref": "#/parameters/fieldSelector-xIcQKXFG"
          },
          {
            "$ref": "#/parameters/labelSelector-5Zw57w4C"
          },
          {
            "$ref": "#/parameters/limit-1NfNmdNH"
          },
          {
            "$ref": "#/parameters/resourceVersion-5WAnf1kx"
          },
          {
            "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
          },
          {
            "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
          },
          {
            "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
          },
          {
            "$ref": "#/parameters/watch-XNNPZGbK"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.EdgeApplicationList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "apps.kubeedge.io",
          "version": "v1alpha1",
          "kind": "EdgeApplication"
        }
      },
      "post": {
        "description": "create an EdgeApplication",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "appsKubeedgeIo_v1alpha1"
        ],
        "operationId": "createAppsKubeedgeIoV1alpha1NamespacedEdgeApplication",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.EdgeApplication"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.EdgeApplication"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.EdgeApplication"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.EdgeApplication"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "apps.kubeedge.io",
          "version": "v1alpha1",
          "kind": "EdgeApplication"
        }
      },
      "delete": {
        "description": "delete collection of EdgeApplication",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "appsKubeedgeIo_v1alpha1"
        ],
        "operationId": "deleteAppsKubeedgeIoV1alpha1CollectionNamespacedEdgeApplication",
        "parameters": [
          {
            "$ref": "#/parameters/body-2Y1dVQaQ"
          },
          {
            "$ref": "#/parameters/continue-QfD61s0i"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldSelector-xIcQKXFG"
          },
          {
            "$ref": "#/parameters/gracePeriodSeconds--K5HaBOS"
          },
          {
            "$ref": "#/parameters/labelSelector-5Zw57w4C"
          },
          {
            "$ref": "#/parameters/limit-1NfNmdNH"
          },
          {
            "$ref": "#/parameters/orphanDependents-uRB25kX5"
          },
          {
            "$ref": "#/parameters/propagationPolicy-6jk3prlO"
          },
          {
            "$ref": "#/parameters/resourceVersion-5WAnf1kx"
          },
          {
            "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
          },
          {
            "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
          },
          {
            "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "apps.kubeedge.io",
          "version": "v1alpha1",
          "kind": "EdgeApplication"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/apps.kubeedge.io/v1alpha1/namespaces/{namespace}/edgeapplications/{name}": {
      "get": {
        "description": "read the specified EdgeApplication",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "appsKubeedgeIo_v1alpha1"
        ],
        "operationId": "readAppsKubeedgeIoV1alpha1NamespacedEdgeApplication",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.EdgeApplication"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "apps.kubeedge.io",
          "version": "v1alpha1",
          "kind": "EdgeApplication"
        }
      },
      "put": {
        "description": "replace the specified EdgeApplication",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "appsKubeedgeIo_v1alpha1"
        ],
        "operationId": "replaceAppsKubeedgeIoV1alpha1NamespacedEdgeApplication",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.EdgeApplication"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.EdgeApplication"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.EdgeApplication"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "apps.kubeedge.io",
          "version": "v1alpha1",
          "kind": "EdgeApplication"
        }
      },
      "delete": {
        "description": "delete an EdgeApplication",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "appsKubeedgeIo_v1alpha1"
        ],
        "operationId": "deleteAppsKubeedgeIoV1alpha1NamespacedEdgeApplication",
        "parameters": [
          {
            "$ref": "#/parameters/body-2Y1dVQaQ"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/gracePeriodSeconds--K5HaBOS"
          },
          {
            "$ref": "#/parameters/orphanDependents-uRB25kX5"
          },
          {
            "$ref": "#/parameters/propagationPolicy-6jk3prlO"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "apps.kubeedge.io",
          "version": "v1alpha1",
          "kind": "EdgeApplication"
        }
      },
      "patch": {
        "description": "partially update the specified EdgeApplication",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "appsKubeedgeIo_v1alpha1"
        ],
        "operationId": "patchAppsKubeedgeIoV1alpha1NamespacedEdgeApplication",
        "parameters": [
          {
            "$ref": "#/parameters/body-78PwaGsr"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-7c6nTn1T"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "$ref": "#/parameters/force-tOGGb0Yi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.EdgeApplication"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.EdgeApplication"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "apps.kubeedge.io",
          "version": "v1alpha1",
          "kind": "EdgeApplication"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the EdgeApplication",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/apps.kubeedge.io/v1alpha1/namespaces/{namespace}/edgeapplications/{name}/status": {
      "get": {
        "description": "read status of the specified EdgeApplication",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "appsKubeedgeIo_v1alpha1"
        ],
        "operationId": "readAppsKubeedgeIoV1alpha1NamespacedEdgeApplicationStatus",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.EdgeApplication"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "apps.kubeedge.io",
          "version": "v1alpha1",
          "kind": "EdgeApplication"
        }
      },
      "put": {
        "description": "replace status of the specified EdgeApplication",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "appsKubeedgeIo_v1alpha1"
        ],
        "operationId": "replaceAppsKubeedgeIoV1alpha1NamespacedEdgeApplicationStatus",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.EdgeApplication"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.EdgeApplication"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.EdgeApplication"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "apps.kubeedge.io",
          "version": "v1alpha1",
          "kind": "EdgeApplication"
        }
      },
      "patch": {
        "description": "partially update status of the specified EdgeApplication",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "appsKubeedgeIo_v1alpha1"
        ],
        "operationId": "patchAppsKubeedgeIoV1alpha1NamespacedEdgeApplicationStatus",
        "parameters": [
          {
            "$ref": "#/parameters/body-78PwaGsr"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-7c6nTn1T"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "$ref": "#/parameters/force-tOGGb0Yi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.EdgeApplication"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.EdgeApplication"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "apps.kubeedge.io",
          "version": "v1alpha1",
          "kind": "EdgeApplication"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the EdgeApplication",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/apps.kubeedge.io/v1alpha1/nodegroups": {
      "get": {
        "description": "list or watch objects of kind NodeGroup",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "appsKubeedgeIo_v1alpha1"
        ],
        "operationId": "listAppsKubeedgeIoV1alpha1NodeGroup",
        "parameters": [
          {
            "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
          },
          {
            "$ref": "#/parameters/continue-QfD61s0i"
          },
          {
            "$ref": "#/parameters/fieldSelector-xIcQKXFG"
          },
          {
            "$ref": "#/parameters/labelSelector-5Zw57w4C"
          },
          {
            "$ref": "#/parameters/limit-1NfNmdNH"
          },
          {
            "$ref": "#/parameters/resourceVersion-5WAnf1kx"
          },
          {
            "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
          },
          {
            "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
          },
          {
            "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
          },
          {
            "$ref": "#/parameters/watch-XNNPZGbK"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.NodeGroupList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "apps.kubeedge.io",
          "version": "v1alpha1",
          "kind": "NodeGroup"
        }
      },
      "post": {
        "description": "create a NodeGroup",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "appsKubeedgeIo_v1alpha1"
        ],
        "operationId": "createAppsKubeedgeIoV1alpha1NodeGroup",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.NodeGroup"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.NodeGroup"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.NodeGroup"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.NodeGroup"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "apps.kubeedge.io",
          "version": "v1alpha1",
          "kind": "NodeGroup"
        }
      },
      "delete": {
        "description": "delete collection of NodeGroup",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "appsKubeedgeIo_v1alpha1"
        ],
        "operationId": "deleteAppsKubeedgeIoV1alpha1CollectionNodeGroup",
        "parameters": [
          {
            "$ref": "#/parameters/body-2Y1dVQaQ"
          },
          {
            "$ref": "#/parameters/continue-QfD61s0i"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldSelector-xIcQKXFG"
          },
          {
            "$ref": "#/parameters/gracePeriodSeconds--K5HaBOS"
          },
          {
            "$ref": "#/parameters/labelSelector-5Zw57w4C"
          },
          {
            "$ref": "#/parameters/limit-1NfNmdNH"
          },
          {
            "$ref": "#/parameters/orphanDependents-uRB25kX5"
          },
          {
            "$ref": "#/parameters/propagationPolicy-6jk3prlO"
          },
          {
            "$ref": "#/parameters/resourceVersion-5WAnf1kx"
          },
          {
            "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
          },
          {
            "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
          },
          {
            "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "apps.kubeedge.io",
          "version": "v1alpha1",
          "kind": "NodeGroup"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/apps.kubeedge.io/v1alpha1/nodegroups/{name}": {
      "get": {
        "description": "read the specified NodeGroup",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "appsKubeedgeIo_v1alpha1"
        ],
        "operationId": "readAppsKubeedgeIoV1alpha1NodeGroup",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.NodeGroup"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "apps.kubeedge.io",
          "version": "v1alpha1",
          "kind": "NodeGroup"
        }
      },
      "put": {
        "description": "replace the specified NodeGroup",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "appsKubeedgeIo_v1alpha1"
        ],
        "operationId": "replaceAppsKubeedgeIoV1alpha1NodeGroup",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.NodeGroup"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.NodeGroup"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.NodeGroup"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "apps.kubeedge.io",
          "version": "v1alpha1",
          "kind": "NodeGroup"
        }
      },
      "delete": {
        "description": "delete a NodeGroup",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "appsKubeedgeIo_v1alpha1"
        ],
        "operationId": "deleteAppsKubeedgeIoV1alpha1NodeGroup",
        "parameters": [
          {
            "$ref": "#/parameters/body-2Y1dVQaQ"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/gracePeriodSeconds--K5HaBOS"
          },
          {
            "$ref": "#/parameters/orphanDependents-uRB25kX5"
          },
          {
            "$ref": "#/parameters/propagationPolicy-6jk3prlO"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "apps.kubeedge.io",
          "version": "v1alpha1",
          "kind": "NodeGroup"
        }
      },
      "patch": {
        "description": "partially update the specified NodeGroup",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "appsKubeedgeIo_v1alpha1"
        ],
        "operationId": "patchAppsKubeedgeIoV1alpha1NodeGroup",
        "parameters": [
          {
            "$ref": "#/parameters/body-78PwaGsr"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-7c6nTn1T"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "$ref": "#/parameters/force-tOGGb0Yi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.NodeGroup"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.NodeGroup"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "apps.kubeedge.io",
          "version": "v1alpha1",
          "kind": "NodeGroup"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the NodeGroup",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/apps.kubeedge.io/v1alpha1/nodegroups/{name}/status": {
      "get": {
        "description": "read status of the specified NodeGroup",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "appsKubeedgeIo_v1alpha1"
        ],
        "operationId": "readAppsKubeedgeIoV1alpha1NodeGroupStatus",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.NodeGroup"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "apps.kubeedge.io",
          "version": "v1alpha1",
          "kind": "NodeGroup"
        }
      },
      "put": {
        "description": "replace status of the specified NodeGroup",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "appsKubeedgeIo_v1alpha1"
        ],
        "operationId": "replaceAppsKubeedgeIoV1alpha1NodeGroupStatus",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.NodeGroup"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.NodeGroup"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.NodeGroup"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "apps.kubeedge.io",
          "version": "v1alpha1",
          "kind": "NodeGroup"
        }
      },
      "patch": {
        "description": "partially update status of the specified NodeGroup",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "appsKubeedgeIo_v1alpha1"
        ],
        "operationId": "patchAppsKubeedgeIoV1alpha1NodeGroupStatus",
        "parameters": [
          {
            "$ref": "#/parameters/body-78PwaGsr"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-7c6nTn1T"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "$ref": "#/parameters/force-tOGGb0Yi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.NodeGroup"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.NodeGroup"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "apps.kubeedge.io",
          "version": "v1alpha1",
          "kind": "NodeGroup"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the NodeGroup",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/apps.kubeedge.io/v1alpha1/watch/edgeapplications": {
      "get": {
        "description": "watch individual changes to a list of EdgeApplication. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "appsKubeedgeIo_v1alpha1"
        ],
        "operationId": "watchAppsKubeedgeIoV1alpha1EdgeApplicationListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "apps.kubeedge.io",
          "version": "v1alpha1",
          "kind": "EdgeApplication"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/apps.kubeedge.io/v1alpha1/watch/namespaces/{namespace}/edgeapplications": {
      "get": {
        "description": "watch individual changes to a list of EdgeApplication. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "appsKubeedgeIo_v1alpha1"
        ],
        "operationId": "watchAppsKubeedgeIoV1alpha1NamespacedEdgeApplicationList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "apps.kubeedge.io",
          "version": "v1alpha1",
          "kind": "EdgeApplication"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/apps.kubeedge.io/v1alpha1/watch/namespaces/{namespace}/edgeapplications/{name}": {
      "get": {
        "description": "watch changes to an object of kind EdgeApplication. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "appsKubeedgeIo_v1alpha1"
        ],
        "operationId": "watchAppsKubeedgeIoV1alpha1NamespacedEdgeApplication",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "apps.kubeedge.io",
          "version": "v1alpha1",
          "kind": "EdgeApplication"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the EdgeApplication",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/apps.kubeedge.io/v1alpha1/watch/nodegroups": {
      "get": {
        "description": "watch individual changes to a list of NodeGroup. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "appsKubeedgeIo_v1alpha1"
        ],
        "operationId": "watchAppsKubeedgeIoV1alpha1NodeGroupList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "apps.kubeedge.io",
          "version": "v1alpha1",
          "kind": "NodeGroup"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/apps.kubeedge.io/v1alpha1/watch/nodegroups/{name}": {
      "get": {
        "description": "watch changes to an object of kind NodeGroup. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "appsKubeedgeIo_v1alpha1"
        ],
        "operationId": "watchAppsKubeedgeIoV1alpha1NodeGroup",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "apps.kubeedge.io",
          "version": "v1alpha1",
          "kind": "NodeGroup"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the NodeGroup",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/devices.kubeedge.io/": {
      "get": {
        "description": "get information of a group",
        "consumes": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo"
        ],
        "operationId": "getDevicesKubeedgeIoAPIGroup",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
            }
          }
        }
      }
    },
    "/apis/devices.kubeedge.io/v1alpha2/": {
      "get": {
        "description": "get available resources",
        "consumes": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "getDevicesKubeedgeIoV1alpha2APIResources",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList"
            }
          }
        }
      }
    },
    "/apis/devices.kubeedge.io/v1alpha2/devicemodels": {
      "get": {
        "description": "list or watch objects of kind DeviceModel",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "listDevicesKubeedgeIoV1alpha2DeviceModelForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceModelList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1alpha2",
          "kind": "DeviceModel"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/devices.kubeedge.io/v1alpha2/devices": {
      "get": {
        "description": "list or watch objects of kind Device",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "listDevicesKubeedgeIoV1alpha2DeviceForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1alpha2",
          "kind": "Device"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/devices.kubeedge.io/v1alpha2/namespaces/{namespace}/devicemodels": {
      "get": {
        "description": "list or watch objects of kind DeviceModel",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "listDevicesKubeedgeIoV1alpha2NamespacedDeviceModel",
        "parameters": [
          {
            "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
          },
          {
            "$ref": "#/parameters/continue-QfD61s0i"
          },
          {
            "$ref": "#/parameters/fieldSelector-xIcQKXFG"
          },
          {
            "$ref": "#/parameters/labelSelector-5Zw57w4C"
          },
          {
            "$ref": "#/parameters/limit-1NfNmdNH"
          },
          {
            "$ref": "#/parameters/resourceVersion-5WAnf1kx"
          },
          {
            "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
          },
          {
            "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
          },
          {
            "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
          },
          {
            "$ref": "#/parameters/watch-XNNPZGbK"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceModelList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1alpha2",
          "kind": "DeviceModel"
        }
      },
      "post": {
        "description": "create a DeviceModel",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "createDevicesKubeedgeIoV1alpha2NamespacedDeviceModel",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceModel"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceModel"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceModel"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceModel"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1alpha2",
          "kind": "DeviceModel"
        }
      },
      "delete": {
        "description": "delete collection of DeviceModel",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "deleteDevicesKubeedgeIoV1alpha2CollectionNamespacedDeviceModel",
        "parameters": [
          {
            "$ref": "#/parameters/body-2Y1dVQaQ"
          },
          {
            "$ref": "#/parameters/continue-QfD61s0i"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldSelector-xIcQKXFG"
          },
          {
            "$ref": "#/parameters/gracePeriodSeconds--K5HaBOS"
          },
          {
            "$ref": "#/parameters/labelSelector-5Zw57w4C"
          },
          {
            "$ref": "#/parameters/limit-1NfNmdNH"
          },
          {
            "$ref": "#/parameters/orphanDependents-uRB25kX5"
          },
          {
            "$ref": "#/parameters/propagationPolicy-6jk3prlO"
          },
          {
            "$ref": "#/parameters/resourceVersion-5WAnf1kx"
          },
          {
            "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
          },
          {
            "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
          },
          {
            "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1alpha2",
          "kind": "DeviceModel"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/devices.kubeedge.io/v1alpha2/namespaces/{namespace}/devicemodels/{name}": {
      "get": {
        "description": "read the specified DeviceModel",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "readDevicesKubeedgeIoV1alpha2NamespacedDeviceModel",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceModel"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1alpha2",
          "kind": "DeviceModel"
        }
      },
      "put": {
        "description": "replace the specified DeviceModel",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "replaceDevicesKubeedgeIoV1alpha2NamespacedDeviceModel",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceModel"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceModel"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceModel"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1alpha2",
          "kind": "DeviceModel"
        }
      },
      "delete": {
        "description": "delete a DeviceModel",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "deleteDevicesKubeedgeIoV1alpha2NamespacedDeviceModel",
        "parameters": [
          {
            "$ref": "#/parameters/body-2Y1dVQaQ"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/gracePeriodSeconds--K5HaBOS"
          },
          {
            "$ref": "#/parameters/orphanDependents-uRB25kX5"
          },
          {
            "$ref": "#/parameters/propagationPolicy-6jk3prlO"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1alpha2",
          "kind": "DeviceModel"
        }
      },
      "patch": {
        "description": "partially update the specified DeviceModel",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "patchDevicesKubeedgeIoV1alpha2NamespacedDeviceModel",
        "parameters": [
          {
            "$ref": "#/parameters/body-78PwaGsr"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-7c6nTn1T"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "$ref": "#/parameters/force-tOGGb0Yi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceModel"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceModel"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1alpha2",
          "kind": "DeviceModel"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the DeviceModel",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/devices.kubeedge.io/v1alpha2/namespaces/{namespace}/devicemodels/{name}/status": {
      "get": {
        "description": "read status of the specified DeviceModel",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "readDevicesKubeedgeIoV1alpha2NamespacedDeviceModelStatus",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceModel"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1alpha2",
          "kind": "DeviceModel"
        }
      },
      "put": {
        "description": "replace status of the specified DeviceModel",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "replaceDevicesKubeedgeIoV1alpha2NamespacedDeviceModelStatus",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceModel"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceModel"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceModel"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1alpha2",
          "kind": "DeviceModel"
        }
      },
      "patch": {
        "description": "partially update status of the specified DeviceModel",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "patchDevicesKubeedgeIoV1alpha2NamespacedDeviceModelStatus",
        "parameters": [
          {
            "$ref": "#/parameters/body-78PwaGsr"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-7c6nTn1T"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "$ref": "#/parameters/force-tOGGb0Yi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceModel"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceModel"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1alpha2",
          "kind": "DeviceModel"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the DeviceModel",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/devices.kubeedge.io/v1alpha2/namespaces/{namespace}/devices": {
      "get": {
        "description": "list or watch objects of kind Device",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "listDevicesKubeedgeIoV1alpha2NamespacedDevice",
        "parameters": [
          {
            "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
          },
          {
            "$ref": "#/parameters/continue-QfD61s0i"
          },
          {
            "$ref": "#/parameters/fieldSelector-xIcQKXFG"
          },
          {
            "$ref": "#/parameters/labelSelector-5Zw57w4C"
          },
          {
            "$ref": "#/parameters/limit-1NfNmdNH"
          },
          {
            "$ref": "#/parameters/resourceVersion-5WAnf1kx"
          },
          {
            "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
          },
          {
            "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
          },
          {
            "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
          },
          {
            "$ref": "#/parameters/watch-XNNPZGbK"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1alpha2",
          "kind": "Device"
        }
      },
      "post": {
        "description": "create a Device",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "createDevicesKubeedgeIoV1alpha2NamespacedDevice",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.Device"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.Device"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.Device"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.Device"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1alpha2",
          "kind": "Device"
        }
      },
      "delete": {
        "description": "delete collection of Device",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "deleteDevicesKubeedgeIoV1alpha2CollectionNamespacedDevice",
        "parameters": [
          {
            "$ref": "#/parameters/body-2Y1dVQaQ"
          },
          {
            "$ref": "#/parameters/continue-QfD61s0i"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldSelector-xIcQKXFG"
          },
          {
            "$ref": "#/parameters/gracePeriodSeconds--K5HaBOS"
          },
          {
            "$ref": "#/parameters/labelSelector-5Zw57w4C"
          },
          {
            "$ref": "#/parameters/limit-1NfNmdNH"
          },
          {
            "$ref": "#/parameters/orphanDependents-uRB25kX5"
          },
          {
            "$ref": "#/parameters/propagationPolicy-6jk3prlO"
          },
          {
            "$ref": "#/parameters/resourceVersion-5WAnf1kx"
          },
          {
            "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
          },
          {
            "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
          },
          {
            "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1alpha2",
          "kind": "Device"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/devices.kubeedge.io/v1alpha2/namespaces/{namespace}/devices/{name}": {
      "get": {
        "description": "read the specified Device",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "readDevicesKubeedgeIoV1alpha2NamespacedDevice",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.Device"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1alpha2",
          "kind": "Device"
        }
      },
      "put": {
        "description": "replace the specified Device",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "replaceDevicesKubeedgeIoV1alpha2NamespacedDevice",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.Device"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.Device"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.Device"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1alpha2",
          "kind": "Device"
        }
      },
      "delete": {
        "description": "delete a Device",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "deleteDevicesKubeedgeIoV1alpha2NamespacedDevice",
        "parameters": [
          {
            "$ref": "#/parameters/body-2Y1dVQaQ"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/gracePeriodSeconds--K5HaBOS"
          },
          {
            "$ref": "#/parameters/orphanDependents-uRB25kX5"
          },
          {
            "$ref": "#/parameters/propagationPolicy-6jk3prlO"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1alpha2",
          "kind": "Device"
        }
      },
      "patch": {
        "description": "partially update the specified Device",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "patchDevicesKubeedgeIoV1alpha2NamespacedDevice",
        "parameters": [
          {
            "$ref": "#/parameters/body-78PwaGsr"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-7c6nTn1T"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "$ref": "#/parameters/force-tOGGb0Yi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.Device"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.Device"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1alpha2",
          "kind": "Device"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the Device",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/devices.kubeedge.io/v1alpha2/namespaces/{namespace}/devices/{name}/status": {
      "get": {
        "description": "read status of the specified Device",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "readDevicesKubeedgeIoV1alpha2NamespacedDeviceStatus",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.Device"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1alpha2",
          "kind": "Device"
        }
      },
      "put": {
        "description": "replace status of the specified Device",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "replaceDevicesKubeedgeIoV1alpha2NamespacedDeviceStatus",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.Device"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.Device"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.Device"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1alpha2",
          "kind": "Device"
        }
      },
      "patch": {
        "description": "partially update status of the specified Device",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "patchDevicesKubeedgeIoV1alpha2NamespacedDeviceStatus",
        "parameters": [
          {
            "$ref": "#/parameters/body-78PwaGsr"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-7c6nTn1T"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "$ref": "#/parameters/force-tOGGb0Yi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.Device"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.Device"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1alpha2",
          "kind": "Device"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the Device",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/devices.kubeedge.io/v1alpha2/watch/devicemodels": {
      "get": {
        "description": "watch individual changes to a list of DeviceModel. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "watchDevicesKubeedgeIoV1alpha2DeviceModelListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1alpha2",
          "kind": "DeviceModel"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/devices.kubeedge.io/v1alpha2/watch/devices": {
      "get": {
        "description": "watch individual changes to a list of Device. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "watchDevicesKubeedgeIoV1alpha2DeviceListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1alpha2",
          "kind": "Device"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/devices.kubeedge.io/v1alpha2/watch/namespaces/{namespace}/devicemodels": {
      "get": {
        "description": "watch individual changes to a list of DeviceModel. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "watchDevicesKubeedgeIoV1alpha2NamespacedDeviceModelList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1alpha2",
          "kind": "DeviceModel"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/devices.kubeedge.io/v1alpha2/watch/namespaces/{namespace}/devicemodels/{name}": {
      "get": {
        "description": "watch changes to an object of kind DeviceModel. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "watchDevicesKubeedgeIoV1alpha2NamespacedDeviceModel",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1alpha2",
          "kind": "DeviceModel"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the DeviceModel",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/devices.kubeedge.io/v1alpha2/watch/namespaces/{namespace}/devices": {
      "get": {
        "description": "watch individual changes to a list of Device. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "watchDevicesKubeedgeIoV1alpha2NamespacedDeviceList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1alpha2",
          "kind": "Device"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/devices.kubeedge.io/v1alpha2/watch/namespaces/{namespace}/devices/{name}": {
      "get": {
        "description": "watch changes to an object of kind Device. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1alpha2"
        ],
        "operationId": "watchDevicesKubeedgeIoV1alpha2NamespacedDevice",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1alpha2",
          "kind": "Device"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the Device",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/devices.kubeedge.io/v1beta1/": {
      "get": {
        "description": "get available resources",
        "consumes": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "getDevicesKubeedgeIoV1beta1APIResources",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList"
            }
          }
        }
      }
    },
    "/apis/devices.kubeedge.io/v1beta1/devicemodels": {
      "get": {
        "description": "list or watch objects of kind DeviceModel",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "listDevicesKubeedgeIoV1beta1DeviceModelForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceModelList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1beta1",
          "kind": "DeviceModel"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/devices.kubeedge.io/v1beta1/devices": {
      "get": {
        "description": "list or watch objects of kind Device",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "listDevicesKubeedgeIoV1beta1DeviceForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1beta1",
          "kind": "Device"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/devices.kubeedge.io/v1beta1/namespaces/{namespace}/devicemodels": {
      "get": {
        "description": "list or watch objects of kind DeviceModel",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "listDevicesKubeedgeIoV1beta1NamespacedDeviceModel",
        "parameters": [
          {
            "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
          },
          {
            "$ref": "#/parameters/continue-QfD61s0i"
          },
          {
            "$ref": "#/parameters/fieldSelector-xIcQKXFG"
          },
          {
            "$ref": "#/parameters/labelSelector-5Zw57w4C"
          },
          {
            "$ref": "#/parameters/limit-1NfNmdNH"
          },
          {
            "$ref": "#/parameters/resourceVersion-5WAnf1kx"
          },
          {
            "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
          },
          {
            "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
          },
          {
            "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
          },
          {
            "$ref": "#/parameters/watch-XNNPZGbK"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceModelList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1beta1",
          "kind": "DeviceModel"
        }
      },
      "post": {
        "description": "create a DeviceModel",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "createDevicesKubeedgeIoV1beta1NamespacedDeviceModel",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceModel"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceModel"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceModel"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceModel"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1beta1",
          "kind": "DeviceModel"
        }
      },
      "delete": {
        "description": "delete collection of DeviceModel",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "deleteDevicesKubeedgeIoV1beta1CollectionNamespacedDeviceModel",
        "parameters": [
          {
            "$ref": "#/parameters/body-2Y1dVQaQ"
          },
          {
            "$ref": "#/parameters/continue-QfD61s0i"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldSelector-xIcQKXFG"
          },
          {
            "$ref": "#/parameters/gracePeriodSeconds--K5HaBOS"
          },
          {
            "$ref": "#/parameters/labelSelector-5Zw57w4C"
          },
          {
            "$ref": "#/parameters/limit-1NfNmdNH"
          },
          {
            "$ref": "#/parameters/orphanDependents-uRB25kX5"
          },
          {
            "$ref": "#/parameters/propagationPolicy-6jk3prlO"
          },
          {
            "$ref": "#/parameters/resourceVersion-5WAnf1kx"
          },
          {
            "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
          },
          {
            "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
          },
          {
            "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1beta1",
          "kind": "DeviceModel"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/devices.kubeedge.io/v1beta1/namespaces/{namespace}/devicemodels/{name}": {
      "get": {
        "description": "read the specified DeviceModel",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "readDevicesKubeedgeIoV1beta1NamespacedDeviceModel",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceModel"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1beta1",
          "kind": "DeviceModel"
        }
      },
      "put": {
        "description": "replace the specified DeviceModel",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "replaceDevicesKubeedgeIoV1beta1NamespacedDeviceModel",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceModel"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceModel"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceModel"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1beta1",
          "kind": "DeviceModel"
        }
      },
      "delete": {
        "description": "delete a DeviceModel",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "deleteDevicesKubeedgeIoV1beta1NamespacedDeviceModel",
        "parameters": [
          {
            "$ref": "#/parameters/body-2Y1dVQaQ"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/gracePeriodSeconds--K5HaBOS"
          },
          {
            "$ref": "#/parameters/orphanDependents-uRB25kX5"
          },
          {
            "$ref": "#/parameters/propagationPolicy-6jk3prlO"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1beta1",
          "kind": "DeviceModel"
        }
      },
      "patch": {
        "description": "partially update the specified DeviceModel",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "patchDevicesKubeedgeIoV1beta1NamespacedDeviceModel",
        "parameters": [
          {
            "$ref": "#/parameters/body-78PwaGsr"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-7c6nTn1T"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "$ref": "#/parameters/force-tOGGb0Yi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceModel"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceModel"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1beta1",
          "kind": "DeviceModel"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the DeviceModel",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/devices.kubeedge.io/v1beta1/namespaces/{namespace}/devicemodels/{name}/status": {
      "get": {
        "description": "read status of the specified DeviceModel",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "readDevicesKubeedgeIoV1beta1NamespacedDeviceModelStatus",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceModel"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1beta1",
          "kind": "DeviceModel"
        }
      },
      "put": {
        "description": "replace status of the specified DeviceModel",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "replaceDevicesKubeedgeIoV1beta1NamespacedDeviceModelStatus",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceModel"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceModel"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceModel"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1beta1",
          "kind": "DeviceModel"
        }
      },
      "patch": {
        "description": "partially update status of the specified DeviceModel",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "patchDevicesKubeedgeIoV1beta1NamespacedDeviceModelStatus",
        "parameters": [
          {
            "$ref": "#/parameters/body-78PwaGsr"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-7c6nTn1T"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "$ref": "#/parameters/force-tOGGb0Yi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceModel"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceModel"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1beta1",
          "kind": "DeviceModel"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the DeviceModel",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/devices.kubeedge.io/v1beta1/namespaces/{namespace}/devices": {
      "get": {
        "description": "list or watch objects of kind Device",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "listDevicesKubeedgeIoV1beta1NamespacedDevice",
        "parameters": [
          {
            "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
          },
          {
            "$ref": "#/parameters/continue-QfD61s0i"
          },
          {
            "$ref": "#/parameters/fieldSelector-xIcQKXFG"
          },
          {
            "$ref": "#/parameters/labelSelector-5Zw57w4C"
          },
          {
            "$ref": "#/parameters/limit-1NfNmdNH"
          },
          {
            "$ref": "#/parameters/resourceVersion-5WAnf1kx"
          },
          {
            "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
          },
          {
            "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
          },
          {
            "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
          },
          {
            "$ref": "#/parameters/watch-XNNPZGbK"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1beta1",
          "kind": "Device"
        }
      },
      "post": {
        "description": "create a Device",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "createDevicesKubeedgeIoV1beta1NamespacedDevice",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.Device"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.Device"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.Device"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.Device"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1beta1",
          "kind": "Device"
        }
      },
      "delete": {
        "description": "delete collection of Device",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "deleteDevicesKubeedgeIoV1beta1CollectionNamespacedDevice",
        "parameters": [
          {
            "$ref": "#/parameters/body-2Y1dVQaQ"
          },
          {
            "$ref": "#/parameters/continue-QfD61s0i"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldSelector-xIcQKXFG"
          },
          {
            "$ref": "#/parameters/gracePeriodSeconds--K5HaBOS"
          },
          {
            "$ref": "#/parameters/labelSelector-5Zw57w4C"
          },
          {
            "$ref": "#/parameters/limit-1NfNmdNH"
          },
          {
            "$ref": "#/parameters/orphanDependents-uRB25kX5"
          },
          {
            "$ref": "#/parameters/propagationPolicy-6jk3prlO"
          },
          {
            "$ref": "#/parameters/resourceVersion-5WAnf1kx"
          },
          {
            "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
          },
          {
            "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
          },
          {
            "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1beta1",
          "kind": "Device"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/devices.kubeedge.io/v1beta1/namespaces/{namespace}/devices/{name}": {
      "get": {
        "description": "read the specified Device",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "readDevicesKubeedgeIoV1beta1NamespacedDevice",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.Device"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1beta1",
          "kind": "Device"
        }
      },
      "put": {
        "description": "replace the specified Device",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "replaceDevicesKubeedgeIoV1beta1NamespacedDevice",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.Device"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.Device"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.Device"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1beta1",
          "kind": "Device"
        }
      },
      "delete": {
        "description": "delete a Device",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "deleteDevicesKubeedgeIoV1beta1NamespacedDevice",
        "parameters": [
          {
            "$ref": "#/parameters/body-2Y1dVQaQ"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/gracePeriodSeconds--K5HaBOS"
          },
          {
            "$ref": "#/parameters/orphanDependents-uRB25kX5"
          },
          {
            "$ref": "#/parameters/propagationPolicy-6jk3prlO"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1beta1",
          "kind": "Device"
        }
      },
      "patch": {
        "description": "partially update the specified Device",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "patchDevicesKubeedgeIoV1beta1NamespacedDevice",
        "parameters": [
          {
            "$ref": "#/parameters/body-78PwaGsr"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-7c6nTn1T"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "$ref": "#/parameters/force-tOGGb0Yi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.Device"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.Device"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1beta1",
          "kind": "Device"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the Device",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/devices.kubeedge.io/v1beta1/namespaces/{namespace}/devices/{name}/status": {
      "get": {
        "description": "read status of the specified Device",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "readDevicesKubeedgeIoV1beta1NamespacedDeviceStatus",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.Device"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1beta1",
          "kind": "Device"
        }
      },
      "put": {
        "description": "replace status of the specified Device",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "replaceDevicesKubeedgeIoV1beta1NamespacedDeviceStatus",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.Device"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.Device"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.Device"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1beta1",
          "kind": "Device"
        }
      },
      "patch": {
        "description": "partially update status of the specified Device",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "patchDevicesKubeedgeIoV1beta1NamespacedDeviceStatus",
        "parameters": [
          {
            "$ref": "#/parameters/body-78PwaGsr"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-7c6nTn1T"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "$ref": "#/parameters/force-tOGGb0Yi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.Device"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.Device"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1beta1",
          "kind": "Device"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the Device",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/devices.kubeedge.io/v1beta1/watch/devicemodels": {
      "get": {
        "description": "watch individual changes to a list of DeviceModel. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "watchDevicesKubeedgeIoV1beta1DeviceModelListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1beta1",
          "kind": "DeviceModel"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/devices.kubeedge.io/v1beta1/watch/devices": {
      "get": {
        "description": "watch individual changes to a list of Device. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "watchDevicesKubeedgeIoV1beta1DeviceListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1beta1",
          "kind": "Device"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/devices.kubeedge.io/v1beta1/watch/namespaces/{namespace}/devicemodels": {
      "get": {
        "description": "watch individual changes to a list of DeviceModel. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "watchDevicesKubeedgeIoV1beta1NamespacedDeviceModelList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1beta1",
          "kind": "DeviceModel"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/devices.kubeedge.io/v1beta1/watch/namespaces/{namespace}/devicemodels/{name}": {
      "get": {
        "description": "watch changes to an object of kind DeviceModel. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "watchDevicesKubeedgeIoV1beta1NamespacedDeviceModel",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1beta1",
          "kind": "DeviceModel"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the DeviceModel",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/devices.kubeedge.io/v1beta1/watch/namespaces/{namespace}/devices": {
      "get": {
        "description": "watch individual changes to a list of Device. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "watchDevicesKubeedgeIoV1beta1NamespacedDeviceList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1beta1",
          "kind": "Device"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/devices.kubeedge.io/v1beta1/watch/namespaces/{namespace}/devices/{name}": {
      "get": {
        "description": "watch changes to an object of kind Device. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "devicesKubeedgeIo_v1beta1"
        ],
        "operationId": "watchDevicesKubeedgeIoV1beta1NamespacedDevice",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "devices.kubeedge.io",
          "version": "v1beta1",
          "kind": "Device"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the Device",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/operations.kubeedge.io/": {
      "get": {
        "description": "get information of a group",
        "consumes": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "operationsKubeedgeIo"
        ],
        "operationId": "getOperationsKubeedgeIoAPIGroup",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
            }
          }
        }
      }
    },
    "/apis/operations.kubeedge.io/v1alpha1/": {
      "get": {
        "description": "get available resources",
        "consumes": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "operationsKubeedgeIo_v1alpha1"
        ],
        "operationId": "getOperationsKubeedgeIoV1alpha1APIResources",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList"
            }
          }
        }
      }
    },
    "/apis/operations.kubeedge.io/v1alpha1/imageprepulljobs": {
      "get": {
        "description": "list or watch objects of kind ImagePrePullJob",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "operationsKubeedgeIo_v1alpha1"
        ],
        "operationId": "listOperationsKubeedgeIoV1alpha1ImagePrePullJob",
        "parameters": [
          {
            "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
          },
          {
            "$ref": "#/parameters/continue-QfD61s0i"
          },
          {
            "$ref": "#/parameters/fieldSelector-xIcQKXFG"
          },
          {
            "$ref": "#/parameters/labelSelector-5Zw57w4C"
          },
          {
            "$ref": "#/parameters/limit-1NfNmdNH"
          },
          {
            "$ref": "#/parameters/resourceVersion-5WAnf1kx"
          },
          {
            "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
          },
          {
            "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
          },
          {
            "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
          },
          {
            "$ref": "#/parameters/watch-XNNPZGbK"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImagePrePullJobList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "operations.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ImagePrePullJob"
        }
      },
      "post": {
        "description": "create an ImagePrePullJob",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "operationsKubeedgeIo_v1alpha1"
        ],
        "operationId": "createOperationsKubeedgeIoV1alpha1ImagePrePullJob",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImagePrePullJob"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImagePrePullJob"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImagePrePullJob"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImagePrePullJob"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "operations.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ImagePrePullJob"
        }
      },
      "delete": {
        "description": "delete collection of ImagePrePullJob",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "operationsKubeedgeIo_v1alpha1"
        ],
        "operationId": "deleteOperationsKubeedgeIoV1alpha1CollectionImagePrePullJob",
        "parameters": [
          {
            "$ref": "#/parameters/body-2Y1dVQaQ"
          },
          {
            "$ref": "#/parameters/continue-QfD61s0i"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldSelector-xIcQKXFG"
          },
          {
            "$ref": "#/parameters/gracePeriodSeconds--K5HaBOS"
          },
          {
            "$ref": "#/parameters/labelSelector-5Zw57w4C"
          },
          {
            "$ref": "#/parameters/limit-1NfNmdNH"
          },
          {
            "$ref": "#/parameters/orphanDependents-uRB25kX5"
          },
          {
            "$ref": "#/parameters/propagationPolicy-6jk3prlO"
          },
          {
            "$ref": "#/parameters/resourceVersion-5WAnf1kx"
          },
          {
            "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
          },
          {
            "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
          },
          {
            "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "operations.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ImagePrePullJob"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/operations.kubeedge.io/v1alpha1/imageprepulljobs/{name}": {
      "get": {
        "description": "read the specified ImagePrePullJob",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "operationsKubeedgeIo_v1alpha1"
        ],
        "operationId": "readOperationsKubeedgeIoV1alpha1ImagePrePullJob",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImagePrePullJob"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "operations.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ImagePrePullJob"
        }
      },
      "put": {
        "description": "replace the specified ImagePrePullJob",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "operationsKubeedgeIo_v1alpha1"
        ],
        "operationId": "replaceOperationsKubeedgeIoV1alpha1ImagePrePullJob",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImagePrePullJob"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImagePrePullJob"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImagePrePullJob"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "operations.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ImagePrePullJob"
        }
      },
      "delete": {
        "description": "delete an ImagePrePullJob",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "operationsKubeedgeIo_v1alpha1"
        ],
        "operationId": "deleteOperationsKubeedgeIoV1alpha1ImagePrePullJob",
        "parameters": [
          {
            "$ref": "#/parameters/body-2Y1dVQaQ"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/gracePeriodSeconds--K5HaBOS"
          },
          {
            "$ref": "#/parameters/orphanDependents-uRB25kX5"
          },
          {
            "$ref": "#/parameters/propagationPolicy-6jk3prlO"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "operations.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ImagePrePullJob"
        }
      },
      "patch": {
        "description": "partially update the specified ImagePrePullJob",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "operationsKubeedgeIo_v1alpha1"
        ],
        "operationId": "patchOperationsKubeedgeIoV1alpha1ImagePrePullJob",
        "parameters": [
          {
            "$ref": "#/parameters/body-78PwaGsr"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-7c6nTn1T"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "$ref": "#/parameters/force-tOGGb0Yi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImagePrePullJob"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImagePrePullJob"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "operations.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ImagePrePullJob"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the ImagePrePullJob",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/operations.kubeedge.io/v1alpha1/imageprepulljobs/{name}/status": {
      "get": {
        "description": "read status of the specified ImagePrePullJob",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "operationsKubeedgeIo_v1alpha1"
        ],
        "operationId": "readOperationsKubeedgeIoV1alpha1ImagePrePullJobStatus",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImagePrePullJob"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "operations.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ImagePrePullJob"
        }
      },
      "put": {
        "description": "replace status of the specified ImagePrePullJob",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "operationsKubeedgeIo_v1alpha1"
        ],
        "operationId": "replaceOperationsKubeedgeIoV1alpha1ImagePrePullJobStatus",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImagePrePullJob"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImagePrePullJob"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImagePrePullJob"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "operations.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ImagePrePullJob"
        }
      },
      "patch": {
        "description": "partially update status of the specified ImagePrePullJob",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "operationsKubeedgeIo_v1alpha1"
        ],
        "operationId": "patchOperationsKubeedgeIoV1alpha1ImagePrePullJobStatus",
        "parameters": [
          {
            "$ref": "#/parameters/body-78PwaGsr"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-7c6nTn1T"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "$ref": "#/parameters/force-tOGGb0Yi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImagePrePullJob"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImagePrePullJob"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "operations.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ImagePrePullJob"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the ImagePrePullJob",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/operations.kubeedge.io/v1alpha1/nodeupgradejobs": {
      "get": {
        "description": "list or watch objects of kind NodeUpgradeJob",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "operationsKubeedgeIo_v1alpha1"
        ],
        "operationId": "listOperationsKubeedgeIoV1alpha1NodeUpgradeJob",
        "parameters": [
          {
            "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
          },
          {
            "$ref": "#/parameters/continue-QfD61s0i"
          },
          {
            "$ref": "#/parameters/fieldSelector-xIcQKXFG"
          },
          {
            "$ref": "#/parameters/labelSelector-5Zw57w4C"
          },
          {
            "$ref": "#/parameters/limit-1NfNmdNH"
          },
          {
            "$ref": "#/parameters/resourceVersion-5WAnf1kx"
          },
          {
            "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
          },
          {
            "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
          },
          {
            "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
          },
          {
            "$ref": "#/parameters/watch-XNNPZGbK"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.NodeUpgradeJobList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "operations.kubeedge.io",
          "version": "v1alpha1",
          "kind": "NodeUpgradeJob"
        }
      },
      "post": {
        "description": "create a NodeUpgradeJob",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "operationsKubeedgeIo_v1alpha1"
        ],
        "operationId": "createOperationsKubeedgeIoV1alpha1NodeUpgradeJob",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.NodeUpgradeJob"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.NodeUpgradeJob"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.NodeUpgradeJob"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.NodeUpgradeJob"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "operations.kubeedge.io",
          "version": "v1alpha1",
          "kind": "NodeUpgradeJob"
        }
      },
      "delete": {
        "description": "delete collection of NodeUpgradeJob",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "operationsKubeedgeIo_v1alpha1"
        ],
        "operationId": "deleteOperationsKubeedgeIoV1alpha1CollectionNodeUpgradeJob",
        "parameters": [
          {
            "$ref": "#/parameters/body-2Y1dVQaQ"
          },
          {
            "$ref": "#/parameters/continue-QfD61s0i"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldSelector-xIcQKXFG"
          },
          {
            "$ref": "#/parameters/gracePeriodSeconds--K5HaBOS"
          },
          {
            "$ref": "#/parameters/labelSelector-5Zw57w4C"
          },
          {
            "$ref": "#/parameters/limit-1NfNmdNH"
          },
          {
            "$ref": "#/parameters/orphanDependents-uRB25kX5"
          },
          {
            "$ref": "#/parameters/propagationPolicy-6jk3prlO"
          },
          {
            "$ref": "#/parameters/resourceVersion-5WAnf1kx"
          },
          {
            "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
          },
          {
            "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
          },
          {
            "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "operations.kubeedge.io",
          "version": "v1alpha1",
          "kind": "NodeUpgradeJob"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/operations.kubeedge.io/v1alpha1/nodeupgradejobs/{name}": {
      "get": {
        "description": "read the specified NodeUpgradeJob",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "operationsKubeedgeIo_v1alpha1"
        ],
        "operationId": "readOperationsKubeedgeIoV1alpha1NodeUpgradeJob",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.NodeUpgradeJob"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "operations.kubeedge.io",
          "version": "v1alpha1",
          "kind": "NodeUpgradeJob"
        }
      },
      "put": {
        "description": "replace the specified NodeUpgradeJob",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "operationsKubeedgeIo_v1alpha1"
        ],
        "operationId": "replaceOperationsKubeedgeIoV1alpha1NodeUpgradeJob",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.NodeUpgradeJob"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.NodeUpgradeJob"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.NodeUpgradeJob"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "operations.kubeedge.io",
          "version": "v1alpha1",
          "kind": "NodeUpgradeJob"
        }
      },
      "delete": {
        "description": "delete a NodeUpgradeJob",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "operationsKubeedgeIo_v1alpha1"
        ],
        "operationId": "deleteOperationsKubeedgeIoV1alpha1NodeUpgradeJob",
        "parameters": [
          {
            "$ref": "#/parameters/body-2Y1dVQaQ"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/gracePeriodSeconds--K5HaBOS"
          },
          {
            "$ref": "#/parameters/orphanDependents-uRB25kX5"
          },
          {
            "$ref": "#/parameters/propagationPolicy-6jk3prlO"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "operations.kubeedge.io",
          "version": "v1alpha1",
          "kind": "NodeUpgradeJob"
        }
      },
      "patch": {
        "description": "partially update the specified NodeUpgradeJob",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "operationsKubeedgeIo_v1alpha1"
        ],
        "operationId": "patchOperationsKubeedgeIoV1alpha1NodeUpgradeJob",
        "parameters": [
          {
            "$ref": "#/parameters/body-78PwaGsr"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-7c6nTn1T"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "$ref": "#/parameters/force-tOGGb0Yi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.NodeUpgradeJob"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.NodeUpgradeJob"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "operations.kubeedge.io",
          "version": "v1alpha1",
          "kind": "NodeUpgradeJob"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the NodeUpgradeJob",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/operations.kubeedge.io/v1alpha1/nodeupgradejobs/{name}/status": {
      "get": {
        "description": "read status of the specified NodeUpgradeJob",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "operationsKubeedgeIo_v1alpha1"
        ],
        "operationId": "readOperationsKubeedgeIoV1alpha1NodeUpgradeJobStatus",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.NodeUpgradeJob"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "operations.kubeedge.io",
          "version": "v1alpha1",
          "kind": "NodeUpgradeJob"
        }
      },
      "put": {
        "description": "replace status of the specified NodeUpgradeJob",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "operationsKubeedgeIo_v1alpha1"
        ],
        "operationId": "replaceOperationsKubeedgeIoV1alpha1NodeUpgradeJobStatus",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.NodeUpgradeJob"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.NodeUpgradeJob"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.NodeUpgradeJob"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "operations.kubeedge.io",
          "version": "v1alpha1",
          "kind": "NodeUpgradeJob"
        }
      },
      "patch": {
        "description": "partially update status of the specified NodeUpgradeJob",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "operationsKubeedgeIo_v1alpha1"
        ],
        "operationId": "patchOperationsKubeedgeIoV1alpha1NodeUpgradeJobStatus",
        "parameters": [
          {
            "$ref": "#/parameters/body-78PwaGsr"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-7c6nTn1T"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "$ref": "#/parameters/force-tOGGb0Yi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.NodeUpgradeJob"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.NodeUpgradeJob"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "operations.kubeedge.io",
          "version": "v1alpha1",
          "kind": "NodeUpgradeJob"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the NodeUpgradeJob",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/operations.kubeedge.io/v1alpha1/watch/imageprepulljobs": {
      "get": {
        "description": "watch individual changes to a list of ImagePrePullJob. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "operationsKubeedgeIo_v1alpha1"
        ],
        "operationId": "watchOperationsKubeedgeIoV1alpha1ImagePrePullJobList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "operations.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ImagePrePullJob"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/operations.kubeedge.io/v1alpha1/watch/imageprepulljobs/{name}": {
      "get": {
        "description": "watch changes to an object of kind ImagePrePullJob. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "operationsKubeedgeIo_v1alpha1"
        ],
        "operationId": "watchOperationsKubeedgeIoV1alpha1ImagePrePullJob",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "operations.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ImagePrePullJob"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the ImagePrePullJob",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/operations.kubeedge.io/v1alpha1/watch/nodeupgradejobs": {
      "get": {
        "description": "watch individual changes to a list of NodeUpgradeJob. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "operationsKubeedgeIo_v1alpha1"
        ],
        "operationId": "watchOperationsKubeedgeIoV1alpha1NodeUpgradeJobList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "operations.kubeedge.io",
          "version": "v1alpha1",
          "kind": "NodeUpgradeJob"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/operations.kubeedge.io/v1alpha1/watch/nodeupgradejobs/{name}": {
      "get": {
        "description": "watch changes to an object of kind NodeUpgradeJob. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "operationsKubeedgeIo_v1alpha1"
        ],
        "operationId": "watchOperationsKubeedgeIoV1alpha1NodeUpgradeJob",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "operations.kubeedge.io",
          "version": "v1alpha1",
          "kind": "NodeUpgradeJob"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the NodeUpgradeJob",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/policy.kubeedge.io/": {
      "get": {
        "description": "get information of a group",
        "consumes": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "policyKubeedgeIo"
        ],
        "operationId": "getPolicyKubeedgeIoAPIGroup",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
            }
          }
        }
      }
    },
    "/apis/policy.kubeedge.io/v1alpha1/": {
      "get": {
        "description": "get available resources",
        "consumes": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "policyKubeedgeIo_v1alpha1"
        ],
        "operationId": "getPolicyKubeedgeIoV1alpha1APIResources",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList"
            }
          }
        }
      }
    },
    "/apis/policy.kubeedge.io/v1alpha1/namespaces/{namespace}/serviceaccountaccesses": {
      "get": {
        "description": "list or watch objects of kind ServiceAccountAccess",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "policyKubeedgeIo_v1alpha1"
        ],
        "operationId": "listPolicyKubeedgeIoV1alpha1NamespacedServiceAccountAccess",
        "parameters": [
          {
            "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
          },
          {
            "$ref": "#/parameters/continue-QfD61s0i"
          },
          {
            "$ref": "#/parameters/fieldSelector-xIcQKXFG"
          },
          {
            "$ref": "#/parameters/labelSelector-5Zw57w4C"
          },
          {
            "$ref": "#/parameters/limit-1NfNmdNH"
          },
          {
            "$ref": "#/parameters/resourceVersion-5WAnf1kx"
          },
          {
            "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
          },
          {
            "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
          },
          {
            "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
          },
          {
            "$ref": "#/parameters/watch-XNNPZGbK"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.ServiceAccountAccessList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "policy.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ServiceAccountAccess"
        }
      },
      "post": {
        "description": "create a ServiceAccountAccess",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "policyKubeedgeIo_v1alpha1"
        ],
        "operationId": "createPolicyKubeedgeIoV1alpha1NamespacedServiceAccountAccess",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.ServiceAccountAccess"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.ServiceAccountAccess"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.ServiceAccountAccess"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.ServiceAccountAccess"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "policy.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ServiceAccountAccess"
        }
      },
      "delete": {
        "description": "delete collection of ServiceAccountAccess",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "policyKubeedgeIo_v1alpha1"
        ],
        "operationId": "deletePolicyKubeedgeIoV1alpha1CollectionNamespacedServiceAccountAccess",
        "parameters": [
          {
            "$ref": "#/parameters/body-2Y1dVQaQ"
          },
          {
            "$ref": "#/parameters/continue-QfD61s0i"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldSelector-xIcQKXFG"
          },
          {
            "$ref": "#/parameters/gracePeriodSeconds--K5HaBOS"
          },
          {
            "$ref": "#/parameters/labelSelector-5Zw57w4C"
          },
          {
            "$ref": "#/parameters/limit-1NfNmdNH"
          },
          {
            "$ref": "#/parameters/orphanDependents-uRB25kX5"
          },
          {
            "$ref": "#/parameters/propagationPolicy-6jk3prlO"
          },
          {
            "$ref": "#/parameters/resourceVersion-5WAnf1kx"
          },
          {
            "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
          },
          {
            "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
          },
          {
            "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "policy.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ServiceAccountAccess"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/policy.kubeedge.io/v1alpha1/namespaces/{namespace}/serviceaccountaccesses/{name}": {
      "get": {
        "description": "read the specified ServiceAccountAccess",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "policyKubeedgeIo_v1alpha1"
        ],
        "operationId": "readPolicyKubeedgeIoV1alpha1NamespacedServiceAccountAccess",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.ServiceAccountAccess"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "policy.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ServiceAccountAccess"
        }
      },
      "put": {
        "description": "replace the specified ServiceAccountAccess",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "policyKubeedgeIo_v1alpha1"
        ],
        "operationId": "replacePolicyKubeedgeIoV1alpha1NamespacedServiceAccountAccess",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.ServiceAccountAccess"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.ServiceAccountAccess"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.ServiceAccountAccess"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "policy.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ServiceAccountAccess"
        }
      },
      "delete": {
        "description": "delete a ServiceAccountAccess",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "policyKubeedgeIo_v1alpha1"
        ],
        "operationId": "deletePolicyKubeedgeIoV1alpha1NamespacedServiceAccountAccess",
        "parameters": [
          {
            "$ref": "#/parameters/body-2Y1dVQaQ"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/gracePeriodSeconds--K5HaBOS"
          },
          {
            "$ref": "#/parameters/orphanDependents-uRB25kX5"
          },
          {
            "$ref": "#/parameters/propagationPolicy-6jk3prlO"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "policy.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ServiceAccountAccess"
        }
      },
      "patch": {
        "description": "partially update the specified ServiceAccountAccess",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "policyKubeedgeIo_v1alpha1"
        ],
        "operationId": "patchPolicyKubeedgeIoV1alpha1NamespacedServiceAccountAccess",
        "parameters": [
          {
            "$ref": "#/parameters/body-78PwaGsr"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-7c6nTn1T"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "$ref": "#/parameters/force-tOGGb0Yi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.ServiceAccountAccess"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.ServiceAccountAccess"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "policy.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ServiceAccountAccess"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the ServiceAccountAccess",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/policy.kubeedge.io/v1alpha1/namespaces/{namespace}/serviceaccountaccesses/{name}/status": {
      "get": {
        "description": "read status of the specified ServiceAccountAccess",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "policyKubeedgeIo_v1alpha1"
        ],
        "operationId": "readPolicyKubeedgeIoV1alpha1NamespacedServiceAccountAccessStatus",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.ServiceAccountAccess"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "policy.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ServiceAccountAccess"
        }
      },
      "put": {
        "description": "replace status of the specified ServiceAccountAccess",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "policyKubeedgeIo_v1alpha1"
        ],
        "operationId": "replacePolicyKubeedgeIoV1alpha1NamespacedServiceAccountAccessStatus",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.ServiceAccountAccess"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.ServiceAccountAccess"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.ServiceAccountAccess"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "policy.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ServiceAccountAccess"
        }
      },
      "patch": {
        "description": "partially update status of the specified ServiceAccountAccess",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "policyKubeedgeIo_v1alpha1"
        ],
        "operationId": "patchPolicyKubeedgeIoV1alpha1NamespacedServiceAccountAccessStatus",
        "parameters": [
          {
            "$ref": "#/parameters/body-78PwaGsr"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-7c6nTn1T"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "$ref": "#/parameters/force-tOGGb0Yi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.ServiceAccountAccess"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.ServiceAccountAccess"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "policy.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ServiceAccountAccess"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the ServiceAccountAccess",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/policy.kubeedge.io/v1alpha1/serviceaccountaccesses": {
      "get": {
        "description": "list or watch objects of kind ServiceAccountAccess",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "policyKubeedgeIo_v1alpha1"
        ],
        "operationId": "listPolicyKubeedgeIoV1alpha1ServiceAccountAccessForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.ServiceAccountAccessList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "policy.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ServiceAccountAccess"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/policy.kubeedge.io/v1alpha1/watch/namespaces/{namespace}/serviceaccountaccesses": {
      "get": {
        "description": "watch individual changes to a list of ServiceAccountAccess. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "policyKubeedgeIo_v1alpha1"
        ],
        "operationId": "watchPolicyKubeedgeIoV1alpha1NamespacedServiceAccountAccessList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "policy.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ServiceAccountAccess"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/policy.kubeedge.io/v1alpha1/watch/namespaces/{namespace}/serviceaccountaccesses/{name}": {
      "get": {
        "description": "watch changes to an object of kind ServiceAccountAccess. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "policyKubeedgeIo_v1alpha1"
        ],
        "operationId": "watchPolicyKubeedgeIoV1alpha1NamespacedServiceAccountAccess",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "policy.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ServiceAccountAccess"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the ServiceAccountAccess",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/policy.kubeedge.io/v1alpha1/watch/serviceaccountaccesses": {
      "get": {
        "description": "watch individual changes to a list of ServiceAccountAccess. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "policyKubeedgeIo_v1alpha1"
        ],
        "operationId": "watchPolicyKubeedgeIoV1alpha1ServiceAccountAccessListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "policy.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ServiceAccountAccess"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/reliablesyncs.kubeedge.io/": {
      "get": {
        "description": "get information of a group",
        "consumes": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "reliablesyncsKubeedgeIo"
        ],
        "operationId": "getReliablesyncsKubeedgeIoAPIGroup",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
            }
          }
        }
      }
    },
    "/apis/reliablesyncs.kubeedge.io/v1alpha1/": {
      "get": {
        "description": "get available resources",
        "consumes": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "reliablesyncsKubeedgeIo_v1alpha1"
        ],
        "operationId": "getReliablesyncsKubeedgeIoV1alpha1APIResources",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList"
            }
          }
        }
      }
    },
    "/apis/reliablesyncs.kubeedge.io/v1alpha1/clusterobjectsyncs": {
      "get": {
        "description": "list or watch objects of kind ClusterObjectSync",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "reliablesyncsKubeedgeIo_v1alpha1"
        ],
        "operationId": "listReliablesyncsKubeedgeIoV1alpha1ClusterObjectSync",
        "parameters": [
          {
            "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
          },
          {
            "$ref": "#/parameters/continue-QfD61s0i"
          },
          {
            "$ref": "#/parameters/fieldSelector-xIcQKXFG"
          },
          {
            "$ref": "#/parameters/labelSelector-5Zw57w4C"
          },
          {
            "$ref": "#/parameters/limit-1NfNmdNH"
          },
          {
            "$ref": "#/parameters/resourceVersion-5WAnf1kx"
          },
          {
            "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
          },
          {
            "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
          },
          {
            "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
          },
          {
            "$ref": "#/parameters/watch-XNNPZGbK"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ClusterObjectSyncList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "reliablesyncs.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ClusterObjectSync"
        }
      },
      "post": {
        "description": "create a ClusterObjectSync",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "reliablesyncsKubeedgeIo_v1alpha1"
        ],
        "operationId": "createReliablesyncsKubeedgeIoV1alpha1ClusterObjectSync",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ClusterObjectSync"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ClusterObjectSync"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ClusterObjectSync"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ClusterObjectSync"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "reliablesyncs.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ClusterObjectSync"
        }
      },
      "delete": {
        "description": "delete collection of ClusterObjectSync",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "reliablesyncsKubeedgeIo_v1alpha1"
        ],
        "operationId": "deleteReliablesyncsKubeedgeIoV1alpha1CollectionClusterObjectSync",
        "parameters": [
          {
            "$ref": "#/parameters/body-2Y1dVQaQ"
          },
          {
            "$ref": "#/parameters/continue-QfD61s0i"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldSelector-xIcQKXFG"
          },
          {
            "$ref": "#/parameters/gracePeriodSeconds--K5HaBOS"
          },
          {
            "$ref": "#/parameters/labelSelector-5Zw57w4C"
          },
          {
            "$ref": "#/parameters/limit-1NfNmdNH"
          },
          {
            "$ref": "#/parameters/orphanDependents-uRB25kX5"
          },
          {
            "$ref": "#/parameters/propagationPolicy-6jk3prlO"
          },
          {
            "$ref": "#/parameters/resourceVersion-5WAnf1kx"
          },
          {
            "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
          },
          {
            "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
          },
          {
            "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "reliablesyncs.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ClusterObjectSync"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/reliablesyncs.kubeedge.io/v1alpha1/clusterobjectsyncs/{name}": {
      "get": {
        "description": "read the specified ClusterObjectSync",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "reliablesyncsKubeedgeIo_v1alpha1"
        ],
        "operationId": "readReliablesyncsKubeedgeIoV1alpha1ClusterObjectSync",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ClusterObjectSync"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "reliablesyncs.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ClusterObjectSync"
        }
      },
      "put": {
        "description": "replace the specified ClusterObjectSync",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "reliablesyncsKubeedgeIo_v1alpha1"
        ],
        "operationId": "replaceReliablesyncsKubeedgeIoV1alpha1ClusterObjectSync",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ClusterObjectSync"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ClusterObjectSync"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ClusterObjectSync"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "reliablesyncs.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ClusterObjectSync"
        }
      },
      "delete": {
        "description": "delete a ClusterObjectSync",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "reliablesyncsKubeedgeIo_v1alpha1"
        ],
        "operationId": "deleteReliablesyncsKubeedgeIoV1alpha1ClusterObjectSync",
        "parameters": [
          {
            "$ref": "#/parameters/body-2Y1dVQaQ"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/gracePeriodSeconds--K5HaBOS"
          },
          {
            "$ref": "#/parameters/orphanDependents-uRB25kX5"
          },
          {
            "$ref": "#/parameters/propagationPolicy-6jk3prlO"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "reliablesyncs.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ClusterObjectSync"
        }
      },
      "patch": {
        "description": "partially update the specified ClusterObjectSync",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "reliablesyncsKubeedgeIo_v1alpha1"
        ],
        "operationId": "patchReliablesyncsKubeedgeIoV1alpha1ClusterObjectSync",
        "parameters": [
          {
            "$ref": "#/parameters/body-78PwaGsr"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-7c6nTn1T"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "$ref": "#/parameters/force-tOGGb0Yi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ClusterObjectSync"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ClusterObjectSync"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "reliablesyncs.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ClusterObjectSync"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the ClusterObjectSync",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/reliablesyncs.kubeedge.io/v1alpha1/clusterobjectsyncs/{name}/status": {
      "get": {
        "description": "read status of the specified ClusterObjectSync",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "reliablesyncsKubeedgeIo_v1alpha1"
        ],
        "operationId": "readReliablesyncsKubeedgeIoV1alpha1ClusterObjectSyncStatus",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ClusterObjectSync"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "reliablesyncs.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ClusterObjectSync"
        }
      },
      "put": {
        "description": "replace status of the specified ClusterObjectSync",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "reliablesyncsKubeedgeIo_v1alpha1"
        ],
        "operationId": "replaceReliablesyncsKubeedgeIoV1alpha1ClusterObjectSyncStatus",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ClusterObjectSync"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ClusterObjectSync"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ClusterObjectSync"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "reliablesyncs.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ClusterObjectSync"
        }
      },
      "patch": {
        "description": "partially update status of the specified ClusterObjectSync",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "reliablesyncsKubeedgeIo_v1alpha1"
        ],
        "operationId": "patchReliablesyncsKubeedgeIoV1alpha1ClusterObjectSyncStatus",
        "parameters": [
          {
            "$ref": "#/parameters/body-78PwaGsr"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-7c6nTn1T"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "$ref": "#/parameters/force-tOGGb0Yi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ClusterObjectSync"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ClusterObjectSync"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "reliablesyncs.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ClusterObjectSync"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the ClusterObjectSync",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/reliablesyncs.kubeedge.io/v1alpha1/namespaces/{namespace}/objectsyncs": {
      "get": {
        "description": "list or watch objects of kind ObjectSync",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "reliablesyncsKubeedgeIo_v1alpha1"
        ],
        "operationId": "listReliablesyncsKubeedgeIoV1alpha1NamespacedObjectSync",
        "parameters": [
          {
            "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
          },
          {
            "$ref": "#/parameters/continue-QfD61s0i"
          },
          {
            "$ref": "#/parameters/fieldSelector-xIcQKXFG"
          },
          {
            "$ref": "#/parameters/labelSelector-5Zw57w4C"
          },
          {
            "$ref": "#/parameters/limit-1NfNmdNH"
          },
          {
            "$ref": "#/parameters/resourceVersion-5WAnf1kx"
          },
          {
            "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
          },
          {
            "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
          },
          {
            "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
          },
          {
            "$ref": "#/parameters/watch-XNNPZGbK"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ObjectSyncList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "reliablesyncs.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ObjectSync"
        }
      },
      "post": {
        "description": "create an ObjectSync",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "reliablesyncsKubeedgeIo_v1alpha1"
        ],
        "operationId": "createReliablesyncsKubeedgeIoV1alpha1NamespacedObjectSync",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ObjectSync"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ObjectSync"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ObjectSync"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ObjectSync"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "reliablesyncs.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ObjectSync"
        }
      },
      "delete": {
        "description": "delete collection of ObjectSync",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "reliablesyncsKubeedgeIo_v1alpha1"
        ],
        "operationId": "deleteReliablesyncsKubeedgeIoV1alpha1CollectionNamespacedObjectSync",
        "parameters": [
          {
            "$ref": "#/parameters/body-2Y1dVQaQ"
          },
          {
            "$ref": "#/parameters/continue-QfD61s0i"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldSelector-xIcQKXFG"
          },
          {
            "$ref": "#/parameters/gracePeriodSeconds--K5HaBOS"
          },
          {
            "$ref": "#/parameters/labelSelector-5Zw57w4C"
          },
          {
            "$ref": "#/parameters/limit-1NfNmdNH"
          },
          {
            "$ref": "#/parameters/orphanDependents-uRB25kX5"
          },
          {
            "$ref": "#/parameters/propagationPolicy-6jk3prlO"
          },
          {
            "$ref": "#/parameters/resourceVersion-5WAnf1kx"
          },
          {
            "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
          },
          {
            "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
          },
          {
            "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "reliablesyncs.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ObjectSync"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/reliablesyncs.kubeedge.io/v1alpha1/namespaces/{namespace}/objectsyncs/{name}": {
      "get": {
        "description": "read the specified ObjectSync",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "reliablesyncsKubeedgeIo_v1alpha1"
        ],
        "operationId": "readReliablesyncsKubeedgeIoV1alpha1NamespacedObjectSync",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ObjectSync"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "reliablesyncs.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ObjectSync"
        }
      },
      "put": {
        "description": "replace the specified ObjectSync",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "reliablesyncsKubeedgeIo_v1alpha1"
        ],
        "operationId": "replaceReliablesyncsKubeedgeIoV1alpha1NamespacedObjectSync",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ObjectSync"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ObjectSync"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ObjectSync"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "reliablesyncs.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ObjectSync"
        }
      },
      "delete": {
        "description": "delete an ObjectSync",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "reliablesyncsKubeedgeIo_v1alpha1"
        ],
        "operationId": "deleteReliablesyncsKubeedgeIoV1alpha1NamespacedObjectSync",
        "parameters": [
          {
            "$ref": "#/parameters/body-2Y1dVQaQ"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/gracePeriodSeconds--K5HaBOS"
          },
          {
            "$ref": "#/parameters/orphanDependents-uRB25kX5"
          },
          {
            "$ref": "#/parameters/propagationPolicy-6jk3prlO"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "reliablesyncs.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ObjectSync"
        }
      },
      "patch": {
        "description": "partially update the specified ObjectSync",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "reliablesyncsKubeedgeIo_v1alpha1"
        ],
        "operationId": "patchReliablesyncsKubeedgeIoV1alpha1NamespacedObjectSync",
        "parameters": [
          {
            "$ref": "#/parameters/body-78PwaGsr"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-7c6nTn1T"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "$ref": "#/parameters/force-tOGGb0Yi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ObjectSync"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ObjectSync"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "reliablesyncs.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ObjectSync"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the ObjectSync",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/reliablesyncs.kubeedge.io/v1alpha1/namespaces/{namespace}/objectsyncs/{name}/status": {
      "get": {
        "description": "read status of the specified ObjectSync",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "reliablesyncsKubeedgeIo_v1alpha1"
        ],
        "operationId": "readReliablesyncsKubeedgeIoV1alpha1NamespacedObjectSyncStatus",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ObjectSync"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "reliablesyncs.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ObjectSync"
        }
      },
      "put": {
        "description": "replace status of the specified ObjectSync",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "reliablesyncsKubeedgeIo_v1alpha1"
        ],
        "operationId": "replaceReliablesyncsKubeedgeIoV1alpha1NamespacedObjectSyncStatus",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ObjectSync"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ObjectSync"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ObjectSync"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "reliablesyncs.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ObjectSync"
        }
      },
      "patch": {
        "description": "partially update status of the specified ObjectSync",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "reliablesyncsKubeedgeIo_v1alpha1"
        ],
        "operationId": "patchReliablesyncsKubeedgeIoV1alpha1NamespacedObjectSyncStatus",
        "parameters": [
          {
            "$ref": "#/parameters/body-78PwaGsr"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-7c6nTn1T"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "$ref": "#/parameters/force-tOGGb0Yi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ObjectSync"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ObjectSync"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "reliablesyncs.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ObjectSync"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the ObjectSync",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/reliablesyncs.kubeedge.io/v1alpha1/objectsyncs": {
      "get": {
        "description": "list or watch objects of kind ObjectSync",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "reliablesyncsKubeedgeIo_v1alpha1"
        ],
        "operationId": "listReliablesyncsKubeedgeIoV1alpha1ObjectSyncForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ObjectSyncList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "reliablesyncs.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ObjectSync"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/reliablesyncs.kubeedge.io/v1alpha1/watch/clusterobjectsyncs": {
      "get": {
        "description": "watch individual changes to a list of ClusterObjectSync. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "reliablesyncsKubeedgeIo_v1alpha1"
        ],
        "operationId": "watchReliablesyncsKubeedgeIoV1alpha1ClusterObjectSyncList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "reliablesyncs.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ClusterObjectSync"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/reliablesyncs.kubeedge.io/v1alpha1/watch/clusterobjectsyncs/{name}": {
      "get": {
        "description": "watch changes to an object of kind ClusterObjectSync. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "reliablesyncsKubeedgeIo_v1alpha1"
        ],
        "operationId": "watchReliablesyncsKubeedgeIoV1alpha1ClusterObjectSync",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "reliablesyncs.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ClusterObjectSync"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the ClusterObjectSync",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/reliablesyncs.kubeedge.io/v1alpha1/watch/namespaces/{namespace}/objectsyncs": {
      "get": {
        "description": "watch individual changes to a list of ObjectSync. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "reliablesyncsKubeedgeIo_v1alpha1"
        ],
        "operationId": "watchReliablesyncsKubeedgeIoV1alpha1NamespacedObjectSyncList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "reliablesyncs.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ObjectSync"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/reliablesyncs.kubeedge.io/v1alpha1/watch/namespaces/{namespace}/objectsyncs/{name}": {
      "get": {
        "description": "watch changes to an object of kind ObjectSync. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "reliablesyncsKubeedgeIo_v1alpha1"
        ],
        "operationId": "watchReliablesyncsKubeedgeIoV1alpha1NamespacedObjectSync",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "reliablesyncs.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ObjectSync"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the ObjectSync",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/reliablesyncs.kubeedge.io/v1alpha1/watch/objectsyncs": {
      "get": {
        "description": "watch individual changes to a list of ObjectSync. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "reliablesyncsKubeedgeIo_v1alpha1"
        ],
        "operationId": "watchReliablesyncsKubeedgeIoV1alpha1ObjectSyncListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "reliablesyncs.kubeedge.io",
          "version": "v1alpha1",
          "kind": "ObjectSync"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/rules.kubeedge.io/": {
      "get": {
        "description": "get information of a group",
        "consumes": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "rulesKubeedgeIo"
        ],
        "operationId": "getRulesKubeedgeIoAPIGroup",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
            }
          }
        }
      }
    },
    "/apis/rules.kubeedge.io/v1/": {
      "get": {
        "description": "get available resources",
        "consumes": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "rulesKubeedgeIo_v1"
        ],
        "operationId": "getRulesKubeedgeIoV1APIResources",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList"
            }
          }
        }
      }
    },
    "/apis/rules.kubeedge.io/v1/namespaces/{namespace}/rules": {
      "get": {
        "description": "list or watch objects of kind Rule",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "rulesKubeedgeIo_v1"
        ],
        "operationId": "listRulesKubeedgeIoV1NamespacedRule",
        "parameters": [
          {
            "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
          },
          {
            "$ref": "#/parameters/continue-QfD61s0i"
          },
          {
            "$ref": "#/parameters/fieldSelector-xIcQKXFG"
          },
          {
            "$ref": "#/parameters/labelSelector-5Zw57w4C"
          },
          {
            "$ref": "#/parameters/limit-1NfNmdNH"
          },
          {
            "$ref": "#/parameters/resourceVersion-5WAnf1kx"
          },
          {
            "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
          },
          {
            "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
          },
          {
            "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
          },
          {
            "$ref": "#/parameters/watch-XNNPZGbK"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.rules.v1.RuleList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "rules.kubeedge.io",
          "version": "v1",
          "kind": "Rule"
        }
      },
      "post": {
        "description": "create a Rule",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "rulesKubeedgeIo_v1"
        ],
        "operationId": "createRulesKubeedgeIoV1NamespacedRule",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.rules.v1.Rule"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.rules.v1.Rule"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.rules.v1.Rule"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.rules.v1.Rule"
            }
          }
        },
        "x-kubernetes-action": "post",
        "x-kubernetes-group-version-kind": {
          "group": "rules.kubeedge.io",
          "version": "v1",
          "kind": "Rule"
        }
      },
      "delete": {
        "description": "delete collection of Rule",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "rulesKubeedgeIo_v1"
        ],
        "operationId": "deleteRulesKubeedgeIoV1CollectionNamespacedRule",
        "parameters": [
          {
            "$ref": "#/parameters/body-2Y1dVQaQ"
          },
          {
            "$ref": "#/parameters/continue-QfD61s0i"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldSelector-xIcQKXFG"
          },
          {
            "$ref": "#/parameters/gracePeriodSeconds--K5HaBOS"
          },
          {
            "$ref": "#/parameters/labelSelector-5Zw57w4C"
          },
          {
            "$ref": "#/parameters/limit-1NfNmdNH"
          },
          {
            "$ref": "#/parameters/orphanDependents-uRB25kX5"
          },
          {
            "$ref": "#/parameters/propagationPolicy-6jk3prlO"
          },
          {
            "$ref": "#/parameters/resourceVersion-5WAnf1kx"
          },
          {
            "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
          },
          {
            "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
          },
          {
            "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "deletecollection",
        "x-kubernetes-group-version-kind": {
          "group": "rules.kubeedge.io",
          "version": "v1",
          "kind": "Rule"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/rules.kubeedge.io/v1/namespaces/{namespace}/rules/{name}": {
      "get": {
        "description": "read the specified Rule",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "rulesKubeedgeIo_v1"
        ],
        "operationId": "readRulesKubeedgeIoV1NamespacedRule",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.rules.v1.Rule"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "rules.kubeedge.io",
          "version": "v1",
          "kind": "Rule"
        }
      },
      "put": {
        "description": "replace the specified Rule",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "rulesKubeedgeIo_v1"
        ],
        "operationId": "replaceRulesKubeedgeIoV1NamespacedRule",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.rules.v1.Rule"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.rules.v1.Rule"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.rules.v1.Rule"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "rules.kubeedge.io",
          "version": "v1",
          "kind": "Rule"
        }
      },
      "delete": {
        "description": "delete a Rule",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "rulesKubeedgeIo_v1"
        ],
        "operationId": "deleteRulesKubeedgeIoV1NamespacedRule",
        "parameters": [
          {
            "$ref": "#/parameters/body-2Y1dVQaQ"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/gracePeriodSeconds--K5HaBOS"
          },
          {
            "$ref": "#/parameters/orphanDependents-uRB25kX5"
          },
          {
            "$ref": "#/parameters/propagationPolicy-6jk3prlO"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
            }
          }
        },
        "x-kubernetes-action": "delete",
        "x-kubernetes-group-version-kind": {
          "group": "rules.kubeedge.io",
          "version": "v1",
          "kind": "Rule"
        }
      },
      "patch": {
        "description": "partially update the specified Rule",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "rulesKubeedgeIo_v1"
        ],
        "operationId": "patchRulesKubeedgeIoV1NamespacedRule",
        "parameters": [
          {
            "$ref": "#/parameters/body-78PwaGsr"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-7c6nTn1T"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "$ref": "#/parameters/force-tOGGb0Yi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.rules.v1.Rule"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.rules.v1.Rule"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "rules.kubeedge.io",
          "version": "v1",
          "kind": "Rule"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the Rule",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/rules.kubeedge.io/v1/namespaces/{namespace}/rules/{name}/status": {
      "get": {
        "description": "read status of the specified Rule",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "rulesKubeedgeIo_v1"
        ],
        "operationId": "readRulesKubeedgeIoV1NamespacedRuleStatus",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.rules.v1.Rule"
            }
          }
        },
        "x-kubernetes-action": "get",
        "x-kubernetes-group-version-kind": {
          "group": "rules.kubeedge.io",
          "version": "v1",
          "kind": "Rule"
        }
      },
      "put": {
        "description": "replace status of the specified Rule",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "rulesKubeedgeIo_v1"
        ],
        "operationId": "replaceRulesKubeedgeIoV1NamespacedRuleStatus",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.rules.v1.Rule"
            }
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-Qy4HdaTW"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.rules.v1.Rule"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.rules.v1.Rule"
            }
          }
        },
        "x-kubernetes-action": "put",
        "x-kubernetes-group-version-kind": {
          "group": "rules.kubeedge.io",
          "version": "v1",
          "kind": "Rule"
        }
      },
      "patch": {
        "description": "partially update status of the specified Rule",
        "consumes": [
          "application/json-patch+json",
          "application/merge-patch+json",
          "application/strategic-merge-patch+json",
          "application/apply-patch+yaml"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "rulesKubeedgeIo_v1"
        ],
        "operationId": "patchRulesKubeedgeIoV1NamespacedRuleStatus",
        "parameters": [
          {
            "$ref": "#/parameters/body-78PwaGsr"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
            "name": "dryRun",
            "in": "query"
          },
          {
            "$ref": "#/parameters/fieldManager-7c6nTn1T"
          },
          {
            "uniqueItems": true,
            "type": "string",
            "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
            "name": "fieldValidation",
            "in": "query"
          },
          {
            "$ref": "#/parameters/force-tOGGb0Yi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.rules.v1.Rule"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.rules.v1.Rule"
            }
          }
        },
        "x-kubernetes-action": "patch",
        "x-kubernetes-group-version-kind": {
          "group": "rules.kubeedge.io",
          "version": "v1",
          "kind": "Rule"
        }
      },
      "parameters": [
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the Rule",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        }
      ]
    },
    "/apis/rules.kubeedge.io/v1/rules": {
      "get": {
        "description": "list or watch objects of kind Rule",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "rulesKubeedgeIo_v1"
        ],
        "operationId": "listRulesKubeedgeIoV1RuleForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.rules.v1.RuleList"
            }
          }
        },
        "x-kubernetes-action": "list",
        "x-kubernetes-group-version-kind": {
          "group": "rules.kubeedge.io",
          "version": "v1",
          "kind": "Rule"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/rules.kubeedge.io/v1/watch/namespaces/{namespace}/rules": {
      "get": {
        "description": "watch individual changes to a list of Rule. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "rulesKubeedgeIo_v1"
        ],
        "operationId": "watchRulesKubeedgeIoV1NamespacedRuleList",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "rules.kubeedge.io",
          "version": "v1",
          "kind": "Rule"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/rules.kubeedge.io/v1/watch/namespaces/{namespace}/rules/{name}": {
      "get": {
        "description": "watch changes to an object of kind Rule. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "rulesKubeedgeIo_v1"
        ],
        "operationId": "watchRulesKubeedgeIoV1NamespacedRule",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watch",
        "x-kubernetes-group-version-kind": {
          "group": "rules.kubeedge.io",
          "version": "v1",
          "kind": "Rule"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "uniqueItems": true,
          "type": "string",
          "description": "name of the Rule",
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "$ref": "#/parameters/namespace-vgWSWtn3"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    },
    "/apis/rules.kubeedge.io/v1/watch/rules": {
      "get": {
        "description": "watch individual changes to a list of Rule. deprecated: use the 'watch' parameter with a list operation instead.",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json",
          "application/yaml",
          "application/vnd.kubernetes.protobuf",
          "application/json;stream=watch",
          "application/vnd.kubernetes.protobuf;stream=watch"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "rulesKubeedgeIo_v1"
        ],
        "operationId": "watchRulesKubeedgeIoV1RuleListForAllNamespaces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent"
            }
          }
        },
        "x-kubernetes-action": "watchlist",
        "x-kubernetes-group-version-kind": {
          "group": "rules.kubeedge.io",
          "version": "v1",
          "kind": "Rule"
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/allowWatchBookmarks-HC2hJt-J"
        },
        {
          "$ref": "#/parameters/continue-QfD61s0i"
        },
        {
          "$ref": "#/parameters/fieldSelector-xIcQKXFG"
        },
        {
          "$ref": "#/parameters/labelSelector-5Zw57w4C"
        },
        {
          "$ref": "#/parameters/limit-1NfNmdNH"
        },
        {
          "$ref": "#/parameters/pretty-nN7o5FEq"
        },
        {
          "$ref": "#/parameters/resourceVersion-5WAnf1kx"
        },
        {
          "$ref": "#/parameters/resourceVersionMatch-t8XhRHeC"
        },
        {
          "$ref": "#/parameters/sendInitialEvents-rLXlEK_k"
        },
        {
          "$ref": "#/parameters/timeoutSeconds-yvYezaOC"
        },
        {
          "$ref": "#/parameters/watch-XNNPZGbK"
        }
      ]
    }
  },
  "definitions": {
    "com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.CommandArgsOverrider": {
      "description": "CommandArgsOverrider represents the rules dedicated to handling command/args overrides.",
      "type": "object",
      "required": [
        "containerName",
        "operator"
      ],
      "properties": {
        "containerName": {
          "description": "The name of container",
          "type": "string",
          "default": ""
        },
        "operator": {
          "description": "Operator represents the operator which will apply on the command/args.",
          "type": "string",
          "default": ""
        },
        "value": {
          "description": "Value to be applied to command/args. Items in Value which will be appended after command/args when Operator is 'add'. Items in Value which match in command/args will be deleted when Operator is 'remove'. If Value is empty, then the command/args will remain the same.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.EdgeApplication": {
      "description": "EdgeApplication is the Schema for the edgeapplications API",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec represents the desired behavior of EdgeApplication.",
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.EdgeApplicationSpec"
        },
        "status": {
          "description": "Status represents the status of PropagationStatus.",
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.EdgeApplicationStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps.kubeedge.io",
          "kind": "EdgeApplication",
          "version": "v1alpha1"
        }
      ]
    },
    "com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.EdgeApplicationList": {
      "description": "EdgeApplicationList contains a list of EdgeApplication",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.EdgeApplication"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps.kubeedge.io",
          "kind": "EdgeApplicationList",
          "version": "v1alpha1"
        }
      ]
    },
    "com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.EdgeApplicationSpec": {
      "description": "EdgeApplicationSpec defines the desired state of EdgeApplication",
      "type": "object",
      "required": [
        "workloadScope"
      ],
      "properties": {
        "workloadScope": {
          "description": "WorkloadScope represents which node groups the workload will be deployed in.",
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.WorkloadScope"
        },
        "workloadTemplate": {
          "description": "WorkloadTemplate contains original templates of resources to be deployed as an EdgeApplication.",
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.ResourceTemplate"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.EdgeApplicationStatus": {
      "description": "EdgeApplicationStatus defines the observed state of EdgeApplication",
      "type": "object",
      "properties": {
        "workloadStatus": {
          "description": "WorkloadStatus contains running statuses of generated resources.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.ManifestStatus"
          }
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.EnvOverrider": {
      "description": "EnvOverrider represents the rules dedicated to handling env overrides.",
      "type": "object",
      "required": [
        "containerName",
        "operator"
      ],
      "properties": {
        "containerName": {
          "description": "The name of container",
          "type": "string",
          "default": ""
        },
        "operator": {
          "description": "Operator represents the operator which will apply on the env.",
          "type": "string",
          "default": ""
        },
        "value": {
          "description": "Value to be applied to env. Must not be empty when operator is 'add' or 'replace'. When the operator is 'remove', the matched value in env will be deleted and only the name of the value will be matched. If Value is empty, then the env will remain the same.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.ImageOverrider": {
      "description": "ImageOverrider represents the rules dedicated to handling image overrides.",
      "type": "object",
      "required": [
        "component",
        "operator"
      ],
      "properties": {
        "component": {
          "description": "Component is part of image name. Basically we presume an image can be made of '[registry/]repository[:tag]'. The registry could be: - k8s.gcr.io - fictional.registry.example:10443 The repository could be: - kube-apiserver - fictional/nginx The tag cloud be: - latest - v1.19.1 - @sha256:dbcc1c35ac38df41fd2f5e4130b32ffdb93ebae8b3dbe638c23575912276fc9c",
          "type": "string",
          "default": ""
        },
        "operator": {
          "description": "Operator represents the operator which will apply on the image.",
          "type": "string",
          "default": ""
        },
        "predicate": {
          "description": "Predicate filters images before applying the rule.\n\nDefaults to nil, in that case, the system will automatically detect image fields if the resource type is Pod, ReplicaSet, Deployment or StatefulSet by following rule:\n  - Pod: /spec/containers/\u003cN\u003e/image\n  - ReplicaSet: /spec/template/spec/containers/\u003cN\u003e/image\n  - Deployment: /spec/template/spec/containers/\u003cN\u003e/image\n  - StatefulSet: /spec/template/spec/containers/\u003cN\u003e/image\nIn addition, all images will be processed if the resource object has more than one containers.\n\nIf not nil, only images matches the filters will be processed.",
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.ImagePredicate"
        },
        "value": {
          "description": "Value to be applied to image. Must not be empty when operator is 'add' or 'replace'. Defaults to empty and ignored when operator is 'remove'.",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.ImagePredicate": {
      "description": "ImagePredicate describes images filter.",
      "type": "object",
      "required": [
        "path"
      ],
      "properties": {
        "path": {
          "description": "Path indicates the path of target field",
          "type": "string",
          "default": ""
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.Manifest": {
      "description": "Manifest represents a resource to be deployed on managed node groups.",
      "type": "object"
    },
    "com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.ManifestStatus": {
      "description": "ManifestStatus contains running status of a specific manifest in spec.",
      "type": "object",
      "required": [
        "identifier"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions contain the different condition statuses for this manifest. Valid condition types are: 1. Processing: this workload is under processing and the current state of manifest does not match the desired. 2. Available: the current status of this workload matches the desired.",
          "type": "string"
        },
        "identifier": {
          "description": "Identifier represents the identity of a resource linking to manifests in spec.",
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.ResourceIdentifier"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.NodeGroup": {
      "description": "NodeGroup is the Schema for the nodegroups API",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec represents the specification of the desired behavior of member nodegroup.",
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.NodeGroupSpec"
        },
        "status": {
          "description": "Status represents the status of member nodegroup.",
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.NodeGroupStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps.kubeedge.io",
          "kind": "NodeGroup",
          "version": "v1alpha1"
        }
      ]
    },
    "com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.NodeGroupList": {
      "description": "NodeGroupList contains a list of NodeGroup",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.NodeGroup"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps.kubeedge.io",
          "kind": "NodeGroupList",
          "version": "v1alpha1"
        }
      ]
    },
    "com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.NodeGroupSpec": {
      "description": "NodeGroupSpec defines the desired state of NodeGroup",
      "type": "object",
      "properties": {
        "matchLabels": {
          "description": "MatchLabels are used to select nodes that have these labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "nodes": {
          "description": "Nodes contains names of all the nodes in the nodegroup.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.NodeGroupStatus": {
      "description": "NodeGroupStatus contains the observed status of all selected nodes in this NodeGroup, including nodes that have been one of the members of this NodeGroup and those have not.",
      "type": "object",
      "properties": {
        "nodeStatuses": {
          "description": "NodeStatuses is a status list of all selected nodes.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.NodeStatus"
          }
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.NodeStatus": {
      "description": "NodeStatus contains status of node that selected by this NodeGroup.",
      "type": "object",
      "required": [
        "nodeName",
        "readyStatus",
        "selectionStatus"
      ],
      "properties": {
        "nodeName": {
          "description": "NodeName contains name of this node.",
          "type": "string",
          "default": ""
        },
        "readyStatus": {
          "description": "ReadyStatus contains ready status of this node.",
          "type": "string",
          "default": ""
        },
        "selectionStatus": {
          "description": "SelectionStatus contains status of the selection result for this node.",
          "type": "string",
          "default": ""
        },
        "selectionStatusReason": {
          "description": "SelectionStatusReason contains human-readable reason for this SelectionStatus.",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.Overriders": {
      "description": "Overriders represents the override rules that would apply on resources.",
      "type": "object",
      "properties": {
        "argsOverriders": {
          "description": "ArgsOverriders represents the rules dedicated to handling container args",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.CommandArgsOverrider"
          }
        },
        "commandOverriders": {
          "description": "CommandOverriders represents the rules dedicated to handling container command",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.CommandArgsOverrider"
          }
        },
        "envOverriders": {
          "description": "EnvOverriders will override the env field of the container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.EnvOverrider"
          }
        },
        "imageOverriders": {
          "description": "ImageOverriders represents the rules dedicated to handling image overrides.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.ImageOverrider"
          }
        },
        "replicas": {
          "description": "Replicas will override the replicas field of deployment",
          "type": "integer",
          "format": "int32"
        },
        "resourcesOverriders": {
          "description": "ResourcesOverriders will override the resources field of the container",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.ResourcesOverrider"
          }
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.ResourceIdentifier": {
      "description": "ResourceIdentifier provides the identifiers needed to interact with any arbitrary object.",
      "type": "object",
      "required": [
        "ordinal"
      ],
      "properties": {
        "group": {
          "description": "Group is the group of the resource.",
          "type": "string"
        },
        "kind": {
          "description": "Kind is the kind of the resource.",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of the resource",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace is the namespace of the resource",
          "type": "string"
        },
        "ordinal": {
          "description": "Ordinal represents an index in manifests list, so the condition can still be linked to a manifest even though manifest cannot be parsed successfully.",
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "resource": {
          "description": "Resource is the resource type of the resource",
          "type": "string"
        },
        "version": {
          "description": "Version is the version of the resource.",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.ResourceTemplate": {
      "description": "ResourceTemplate represents original templates of resources to be deployed as an EdgeApplication.",
      "type": "object",
      "properties": {
        "manifests": {
          "description": "Manifests represent a list of Kubernetes resources to be deployed on the managed node groups.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.Manifest"
          }
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.ResourcesOverrider": {
      "description": "ResourcesOverrider represents the rules dedicated to handling resources overrides.",
      "type": "object",
      "required": [
        "containerName"
      ],
      "properties": {
        "containerName": {
          "description": "The name of container",
          "type": "string",
          "default": ""
        },
        "value": {
          "description": "Value to be applied to resources. Must not be empty",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.TargetNodeGroup": {
      "description": "TargetNodeGroup represents the target node group of workload to be deployed, including override rules to apply for this node group.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "Name represents the name of target node group",
          "type": "string",
          "default": ""
        },
        "overriders": {
          "description": "Overriders represents the override rules that would apply on workload.",
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.Overriders"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.WorkloadScope": {
      "description": "WorkloadScope represents which node groups the workload should be deployed in.",
      "type": "object",
      "properties": {
        "targetNodeGroups": {
          "description": "TargetNodeGroups represents the target node groups of workload to be deployed.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.apps.v1alpha1.TargetNodeGroup"
          }
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.BluetoothOperations": {
      "description": "Specify the operation that should be performed to convert incoming data into understandable form",
      "type": "object",
      "properties": {
        "operationType": {
          "description": "Required: Specifies the operation to be performed to convert incoming data",
          "type": "string"
        },
        "operationValue": {
          "description": "Required: Specifies with what value the operation is to be performed",
          "type": "number",
          "format": "double"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.BluetoothReadConverter": {
      "description": "Specifies the operations that may need to be performed to convert the data",
      "type": "object",
      "properties": {
        "endIndex": {
          "description": "Required: Specifies the end index of incoming byte stream to be considered to convert the data the value specified should be inclusive for example if 3 is specified it includes the third index",
          "type": "integer",
          "format": "int32"
        },
        "orderOfOperations": {
          "description": "Specifies in what order the operations(which are required to be performed to convert incoming data into understandable form) are performed",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.BluetoothOperations"
          }
        },
        "shiftLeft": {
          "description": "Refers to the number of bits to shift left, if left-shift operation is necessary for conversion",
          "type": "integer",
          "format": "int32"
        },
        "shiftRight": {
          "description": "Refers to the number of bits to shift right, if right-shift operation is necessary for conversion",
          "type": "integer",
          "format": "int32"
        },
        "startIndex": {
          "description": "Required: Specifies the start index of the incoming byte stream to be considered to convert the data. For example: start-index:2, end-index:3 concatenates the value present at second and third index of the incoming byte stream. If we want to reverse the order we can give it as start-index:3, end-index:2",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.CustomizedValue": {
      "description": "CustomizedValue contains a map type data",
      "type": "object"
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DataProperty": {
      "description": "DataProperty represents the device property for external use.",
      "type": "object",
      "properties": {
        "metadata": {
          "description": "Additional metadata like timestamp when the value was reported etc.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "propertyName": {
          "description": "Required: The property name for which should be processed by external apps. This property should be present in the device model.",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.Device": {
      "description": "Device is the Schema for the devices API",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "devices.kubeedge.io",
          "kind": "Device",
          "version": "v1alpha2"
        }
      ]
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceData": {
      "description": "DeviceData reports the device's time-series data to edge MQTT broker. These data should not be processed by edgecore. Instead, they can be processed by third-party data-processing apps like EMQX kuiper.",
      "type": "object",
      "properties": {
        "dataProperties": {
          "description": "Required: A list of data properties, which are not required to be processed by edgecore",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DataProperty"
          }
        },
        "dataTopic": {
          "description": "Topic used by mapper, all data collected from dataProperties should be published to this topic, the default value is $ke/events/device/+/data/update",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceList": {
      "description": "DeviceList contains a list of Device",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.Device"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "devices.kubeedge.io",
          "kind": "DeviceList",
          "version": "v1alpha2"
        }
      ]
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceModel": {
      "description": "DeviceModel is the Schema for the device model API",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceModelSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "devices.kubeedge.io",
          "kind": "DeviceModel",
          "version": "v1alpha2"
        }
      ]
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceModelList": {
      "description": "DeviceModelList contains a list of DeviceModel",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceModel"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "devices.kubeedge.io",
          "kind": "DeviceModelList",
          "version": "v1alpha2"
        }
      ]
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceModelSpec": {
      "description": "DeviceModelSpec defines the model / template for a device.It is a blueprint which describes the device capabilities and access mechanism via property visitors.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Required: List of device properties.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceProperty"
          }
        },
        "protocol": {
          "description": "Required for DMI: Protocol name used by the device.",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceProperty": {
      "description": "DeviceProperty describes an individual device property / attribute like temperature / humidity etc.",
      "type": "object",
      "properties": {
        "description": {
          "description": "The device property description.",
          "type": "string"
        },
        "name": {
          "description": "Required: The device property name.",
          "type": "string"
        },
        "type": {
          "description": "Required: PropertyType represents the type and data validation of the property.",
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.PropertyType"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DevicePropertyVisitor": {
      "description": "DevicePropertyVisitor describes the specifics of accessing a particular device property. Visitors are intended to be consumed by device mappers which connect to devices and collect data / perform actions on the device.",
      "type": "object",
      "properties": {
        "bluetooth": {
          "description": "Bluetooth represents a set of additional visitor config fields of bluetooth protocol.",
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.VisitorConfigBluetooth"
        },
        "collectCycle": {
          "description": "Define how frequent mapper will collect from device.",
          "type": "integer",
          "format": "int64"
        },
        "customizedProtocol": {
          "description": "CustomizedProtocol represents a set of visitor config fields of bluetooth protocol.",
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.VisitorConfigCustomized"
        },
        "customizedValues": {
          "description": "Customized values for visitor of provided protocols",
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.CustomizedValue"
        },
        "modbus": {
          "description": "Modbus represents a set of additional visitor config fields of modbus protocol.",
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.VisitorConfigModbus"
        },
        "opcua": {
          "description": "Opcua represents a set of additional visitor config fields of opc-ua protocol.",
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.VisitorConfigOPCUA"
        },
        "propertyName": {
          "description": "Required: The device property name to be accessed. This should refer to one of the device properties defined in the device model.",
          "type": "string"
        },
        "reportCycle": {
          "description": "Define how frequent mapper will report the value.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceSpec": {
      "description": "DeviceSpec represents a single device instance. It is an instantation of a device model.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Data section describe a list of time-series properties which should be processed on edge node.",
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceData"
        },
        "deviceModelRef": {
          "description": "Required: DeviceModelRef is reference to the device model used as a template to create the device instance.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "nodeSelector": {
          "description": "NodeSelector indicates the binding preferences between devices and nodes. Refer to k8s.io/kubernetes/pkg/apis/core NodeSelector for more details",
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelector"
        },
        "propertyVisitors": {
          "description": "List of property visitors which describe how to access the device properties. PropertyVisitors must unique by propertyVisitor.propertyName.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DevicePropertyVisitor"
          }
        },
        "protocol": {
          "description": "Required: The protocol configuration used to connect to the device.",
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.ProtocolConfig"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.DeviceStatus": {
      "description": "DeviceStatus reports the device state and the desired/reported values of twin attributes.",
      "type": "object",
      "properties": {
        "twins": {
          "description": "A list of device twins containing desired/reported desired/reported values of twin properties. Optional: A passive device won't have twin properties and this list could be empty.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.Twin"
          }
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.PropertyType": {
      "description": "Represents the type and data validation of a property. Only one of its members may be specified.",
      "type": "object",
      "properties": {
        "boolean": {
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.PropertyTypeBoolean"
        },
        "bytes": {
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.PropertyTypeBytes"
        },
        "double": {
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.PropertyTypeDouble"
        },
        "float": {
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.PropertyTypeFloat"
        },
        "int": {
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.PropertyTypeInt64"
        },
        "string": {
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.PropertyTypeString"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.PropertyTypeBoolean": {
      "type": "object",
      "properties": {
        "accessMode": {
          "description": "Required: Access mode of property, ReadWrite or ReadOnly.",
          "type": "string"
        },
        "defaultValue": {
          "type": "boolean"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.PropertyTypeBytes": {
      "type": "object",
      "properties": {
        "accessMode": {
          "description": "Required: Access mode of property, ReadWrite or ReadOnly.",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.PropertyTypeDouble": {
      "type": "object",
      "properties": {
        "accessMode": {
          "description": "Required: Access mode of property, ReadWrite or ReadOnly.",
          "type": "string"
        },
        "defaultValue": {
          "type": "number",
          "format": "double"
        },
        "maximum": {
          "type": "number",
          "format": "double"
        },
        "minimum": {
          "type": "number",
          "format": "double"
        },
        "unit": {
          "description": "The unit of the property",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.PropertyTypeFloat": {
      "type": "object",
      "properties": {
        "accessMode": {
          "description": "Required: Access mode of property, ReadWrite or ReadOnly.",
          "type": "string"
        },
        "defaultValue": {
          "type": "number",
          "format": "float"
        },
        "maximum": {
          "type": "number",
          "format": "float"
        },
        "minimum": {
          "type": "number",
          "format": "float"
        },
        "unit": {
          "description": "The unit of the property",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.PropertyTypeInt64": {
      "type": "object",
      "properties": {
        "accessMode": {
          "description": "Required: Access mode of property, ReadWrite or ReadOnly.",
          "type": "string"
        },
        "defaultValue": {
          "type": "integer",
          "format": "int64"
        },
        "maximum": {
          "type": "integer",
          "format": "int64"
        },
        "minimum": {
          "type": "integer",
          "format": "int64"
        },
        "unit": {
          "description": "The unit of the property",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.PropertyTypeString": {
      "type": "object",
      "properties": {
        "accessMode": {
          "description": "Required: Access mode of property, ReadWrite or ReadOnly.",
          "type": "string"
        },
        "defaultValue": {
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.ProtocolConfig": {
      "description": "Only one of its members may be specified.",
      "type": "object",
      "properties": {
        "bluetooth": {
          "description": "Protocol configuration for bluetooth",
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.ProtocolConfigBluetooth"
        },
        "common": {
          "description": "Configuration for protocol common part",
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.ProtocolConfigCommon"
        },
        "customizedProtocol": {
          "description": "Configuration for customized protocol",
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.ProtocolConfigCustomized"
        },
        "modbus": {
          "description": "Protocol configuration for modbus",
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.ProtocolConfigModbus"
        },
        "opcua": {
          "description": "Protocol configuration for opc-ua",
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.ProtocolConfigOpcUA"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.ProtocolConfigBluetooth": {
      "type": "object",
      "properties": {
        "macAddress": {
          "description": "Unique identifier assigned to the device.",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.ProtocolConfigCOM": {
      "type": "object",
      "properties": {
        "baudRate": {
          "description": "Required. BaudRate 115200|57600|38400|19200|9600|4800|2400|1800|1200|600|300|200|150|134|110|75|50",
          "type": "integer",
          "format": "int64"
        },
        "dataBits": {
          "description": "Required. Valid values are 8, 7, 6, 5.",
          "type": "integer",
          "format": "int64"
        },
        "parity": {
          "description": "Required. Valid options are \"none\", \"even\", \"odd\". Defaults to \"none\".",
          "type": "string"
        },
        "serialPort": {
          "description": "Required.",
          "type": "string"
        },
        "stopBits": {
          "description": "Required. Bit that stops 1|2",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.ProtocolConfigCommon": {
      "description": "Only one of COM or TCP may be specified.",
      "type": "object",
      "properties": {
        "collectRetryTimes": {
          "description": "Define retry times of mapper will collect from device.",
          "type": "integer",
          "format": "int64"
        },
        "collectTimeout": {
          "description": "Define timeout of mapper collect from device.",
          "type": "integer",
          "format": "int64"
        },
        "collectType": {
          "description": "Define collect type, sync or async.",
          "type": "string"
        },
        "com": {
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.ProtocolConfigCOM"
        },
        "commType": {
          "description": "Communication type, like tcp client, tcp server or COM",
          "type": "string"
        },
        "customizedValues": {
          "description": "Customized values for provided protocol",
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.CustomizedValue"
        },
        "reconnRetryTimes": {
          "description": "Reconnecting retry times",
          "type": "integer",
          "format": "int64"
        },
        "reconnTimeout": {
          "description": "Reconnection timeout",
          "type": "integer",
          "format": "int64"
        },
        "tcp": {
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.ProtocolConfigTCP"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.ProtocolConfigCustomized": {
      "type": "object",
      "properties": {
        "configData": {
          "description": "Any config data",
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.CustomizedValue"
        },
        "protocolName": {
          "description": "Unique protocol name Required.",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.ProtocolConfigModbus": {
      "description": "Only one of its members may be specified.",
      "type": "object",
      "properties": {
        "slaveID": {
          "description": "Required. 0-255",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.ProtocolConfigOpcUA": {
      "type": "object",
      "properties": {
        "certificate": {
          "description": "Certificate for access opc server.",
          "type": "string"
        },
        "password": {
          "description": "Password for access opc server.",
          "type": "string"
        },
        "privateKey": {
          "description": "PrivateKey for access opc server.",
          "type": "string"
        },
        "securityMode": {
          "description": "Defaults to \"none\".",
          "type": "string"
        },
        "securityPolicy": {
          "description": "Defaults to \"none\".",
          "type": "string"
        },
        "timeout": {
          "description": "Timeout seconds for the opc server connection.???",
          "type": "integer",
          "format": "int64"
        },
        "url": {
          "description": "Required: The URL for opc server endpoint.",
          "type": "string"
        },
        "userName": {
          "description": "Username for access opc server.",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.ProtocolConfigTCP": {
      "type": "object",
      "properties": {
        "ip": {
          "description": "Required.",
          "type": "string"
        },
        "port": {
          "description": "Required.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.Twin": {
      "description": "Twin provides a logical representation of control properties (writable properties in the device model). The properties can have a Desired state and a Reported state. The cloud configures the `Desired`state of a device property and this configuration update is pushed to the edge node. The mapper sends a command to the device to change this property value as per the desired state . It receives the `Reported` state of the property once the previous operation is complete and sends the reported state to the cloud. Offline device interaction in the edge is possible via twin properties for control/command operations.",
      "type": "object",
      "properties": {
        "desired": {
          "description": "Required: the desired property value.",
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.TwinProperty"
        },
        "propertyName": {
          "description": "Required: The property name for which the desired/reported values are specified. This property should be present in the device model.",
          "type": "string"
        },
        "reported": {
          "description": "Required: the reported property value.",
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.TwinProperty"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.TwinProperty": {
      "description": "TwinProperty represents the device property for which an Expected/Actual state can be defined.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "metadata": {
          "description": "Additional metadata like timestamp when the value was reported etc.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "value": {
          "description": "Required: The value for this property.",
          "type": "string",
          "default": ""
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.VisitorConfigBluetooth": {
      "description": "Common visitor configurations for bluetooth protocol",
      "type": "object",
      "properties": {
        "characteristicUUID": {
          "description": "Required: Unique ID of the corresponding operation",
          "type": "string"
        },
        "dataConverter": {
          "description": "Responsible for converting the data being read from the bluetooth device into a form that is understandable by the platform",
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.BluetoothReadConverter"
        },
        "dataWrite": {
          "description": "Responsible for converting the data coming from the platform into a form that is understood by the bluetooth device For example: \"ON\":[1], \"OFF\":[0]",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.VisitorConfigCustomized": {
      "description": "Common visitor configurations for customized protocol",
      "type": "object",
      "properties": {
        "configData": {
          "description": "Required: The configData of customized protocol",
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.CustomizedValue"
        },
        "protocolName": {
          "description": "Required: name of customized protocol",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.VisitorConfigModbus": {
      "description": "Common visitor configurations for modbus protocol",
      "type": "object",
      "properties": {
        "isRegisterSwap": {
          "description": "Indicates whether the high and low register swapped. Defaults to false.",
          "type": "boolean"
        },
        "isSwap": {
          "description": "Indicates whether the high and low byte swapped. Defaults to false.",
          "type": "boolean"
        },
        "limit": {
          "description": "Required: Limit number of registers to read/write.",
          "type": "integer",
          "format": "int64"
        },
        "offset": {
          "description": "Required: Offset indicates the starting register number to read/write data.",
          "type": "integer",
          "format": "int64"
        },
        "register": {
          "description": "Required: Type of register",
          "type": "string"
        },
        "scale": {
          "description": "The scale to convert raw property data into final units. Defaults to 1.0",
          "type": "number",
          "format": "double"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1alpha2.VisitorConfigOPCUA": {
      "description": "Common visitor configurations for opc-ua protocol",
      "type": "object",
      "properties": {
        "browseName": {
          "description": "The name of opc-ua node",
          "type": "string"
        },
        "nodeID": {
          "description": "Required: The ID of opc-ua node, e.g. \"ns=1,i=1005\"",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.CustomizedValue": {
      "description": "CustomizedValue contains a map type data",
      "type": "object"
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DBMethodConfig": {
      "type": "object",
      "properties": {
        "TDEngine": {
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DBMethodTDEngine"
        },
        "influxdb2": {
          "description": "method configuration for database",
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DBMethodInfluxdb2"
        },
        "mysql": {
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DBMethodMySQL"
        },
        "redis": {
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DBMethodRedis"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DBMethodInfluxdb2": {
      "type": "object",
      "properties": {
        "influxdb2ClientConfig": {
          "description": "Config of influx database",
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.Influxdb2ClientConfig"
        },
        "influxdb2DataConfig": {
          "description": "config of device data when push to influx database",
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.Influxdb2DataConfig"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DBMethodMySQL": {
      "type": "object",
      "properties": {
        "mysqlClientConfig": {
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.MySQLClientConfig"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DBMethodRedis": {
      "type": "object",
      "properties": {
        "redisClientConfig": {
          "description": "RedisClientConfig of redis database",
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.RedisClientConfig"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DBMethodTDEngine": {
      "type": "object",
      "properties": {
        "TDEngineClientConfig": {
          "description": "tdengineClientConfig of tdengine database",
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.TDEngineClientConfig"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.Device": {
      "description": "Device is the Schema for the devices API",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "devices.kubeedge.io",
          "kind": "Device",
          "version": "v1beta1"
        }
      ]
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceList": {
      "description": "DeviceList contains a list of Device",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.Device"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "devices.kubeedge.io",
          "kind": "DeviceList",
          "version": "v1beta1"
        }
      ]
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceModel": {
      "description": "DeviceModel is the Schema for the device model API",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceModelSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "devices.kubeedge.io",
          "kind": "DeviceModel",
          "version": "v1beta1"
        }
      ]
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceModelList": {
      "description": "DeviceModelList contains a list of DeviceModel",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceModel"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "devices.kubeedge.io",
          "kind": "DeviceModelList",
          "version": "v1beta1"
        }
      ]
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceModelSpec": {
      "description": "DeviceModelSpec defines the model for a device.It is a blueprint which describes the device capabilities and access mechanism via property visitors.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Required: List of device properties.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.ModelProperty"
          }
        },
        "protocol": {
          "description": "Required: Protocol name used by the device.",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceProperty": {
      "description": "DeviceProperty describes the specifics all the properties of the device.",
      "type": "object",
      "properties": {
        "collectCycle": {
          "description": "Define how frequent mapper will collect from device.",
          "type": "integer",
          "format": "int64"
        },
        "desired": {
          "description": "The desired property value.",
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.TwinProperty"
        },
        "name": {
          "description": "Required: The device property name to be accessed. It must be unique. Note: If you need to use the built-in stream data processing function, you need to define Name as saveFrame or saveVideo",
          "type": "string"
        },
        "pushMethod": {
          "description": "PushMethod represents the protocol used to push data, please ensure that the mapper can access the destination address.",
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.PushMethod"
        },
        "reportCycle": {
          "description": "Define how frequent mapper will report the value.",
          "type": "integer",
          "format": "int64"
        },
        "reportToCloud": {
          "description": "whether be reported to the cloud",
          "type": "boolean"
        },
        "visitors": {
          "description": "Visitors are intended to be consumed by device mappers which connect to devices and collect data / perform actions on the device. Required: Protocol relevant config details about the how to access the device property.",
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.VisitorConfig"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceSpec": {
      "description": "DeviceSpec represents a single device instance.",
      "type": "object",
      "properties": {
        "deviceModelRef": {
          "description": "Required: DeviceModelRef is reference to the device model used as a template to create the device instance.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "nodeName": {
          "description": "NodeName is a request to schedule this device onto a specific node. If it is non-empty, the scheduler simply schedules this device onto that node, assuming that it fits resource requirements.",
          "type": "string"
        },
        "properties": {
          "description": "List of properties which describe the device properties. properties list item must be unique by properties.Name.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceProperty"
          }
        },
        "protocol": {
          "description": "Required: The protocol configuration used to connect to the device.",
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.ProtocolConfig"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DeviceStatus": {
      "description": "DeviceStatus reports the device state and the desired/reported values of twin attributes.",
      "type": "object",
      "properties": {
        "twins": {
          "description": "A list of device twins containing desired/reported desired/reported values of twin properties. Optional: A passive device won't have twin properties and this list could be empty.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.Twin"
          }
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.Influxdb2ClientConfig": {
      "type": "object",
      "properties": {
        "bucket": {
          "description": "Bucket of the user in influx database",
          "type": "string"
        },
        "org": {
          "description": "Org of the user in influx database",
          "type": "string"
        },
        "url": {
          "description": "Url of influx database",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.Influxdb2DataConfig": {
      "type": "object",
      "properties": {
        "fieldKey": {
          "description": "FieldKey of the user data",
          "type": "string"
        },
        "measurement": {
          "description": "Measurement of the user data",
          "type": "string"
        },
        "tag": {
          "description": "the tag of device data",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.ModelProperty": {
      "description": "ModelProperty describes an individual device property / attribute like temperature / humidity etc.",
      "type": "object",
      "properties": {
        "accessMode": {
          "description": "Required: Access mode of property, ReadWrite or ReadOnly.",
          "type": "string"
        },
        "description": {
          "description": "The device property description.",
          "type": "string"
        },
        "maximum": {
          "type": "string"
        },
        "minimum": {
          "type": "string"
        },
        "name": {
          "description": "Required: The device property name. Note: If you need to use the built-in stream data processing function, you need to define Name as saveFrame or saveVideo",
          "type": "string"
        },
        "type": {
          "description": "Required: Type of device property, ENUM: INT,FLOAT,DOUBLE,STRING,BOOLEAN,BYTES,STREAM",
          "type": "string"
        },
        "unit": {
          "description": "The unit of the property",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.MySQLClientConfig": {
      "type": "object",
      "properties": {
        "addr": {
          "description": "mysql address,like localhost:3306",
          "type": "string"
        },
        "database": {
          "description": "database name",
          "type": "string"
        },
        "userName": {
          "description": "user name",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.ProtocolConfig": {
      "type": "object",
      "properties": {
        "configData": {
          "description": "Any config data",
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.CustomizedValue"
        },
        "protocolName": {
          "description": "Unique protocol name Required.",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.PushMethod": {
      "type": "object",
      "properties": {
        "dbMethod": {
          "description": "DBMethod represents the method used to push data to database, please ensure that the mapper can access the destination address.",
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.DBMethodConfig"
        },
        "http": {
          "description": "HTTP Push method configuration for http",
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.PushMethodHTTP"
        },
        "mqtt": {
          "description": "MQTT Push method configuration for mqtt",
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.PushMethodMQTT"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.PushMethodHTTP": {
      "type": "object",
      "properties": {
        "hostName": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int64"
        },
        "requestPath": {
          "type": "string"
        },
        "timeout": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.PushMethodMQTT": {
      "type": "object",
      "properties": {
        "address": {
          "description": "broker address, like mqtt://127.0.0.1:1883",
          "type": "string"
        },
        "qos": {
          "description": "qos of mqtt publish param",
          "type": "integer",
          "format": "int32"
        },
        "retained": {
          "description": "Is the message retained",
          "type": "boolean"
        },
        "topic": {
          "description": "publish topic for mqtt",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.RedisClientConfig": {
      "type": "object",
      "properties": {
        "addr": {
          "description": "Addr of Redis database",
          "type": "string"
        },
        "db": {
          "description": "Db of Redis database",
          "type": "integer",
          "format": "int32"
        },
        "minIdleConns": {
          "description": "MinIdleConns of Redis database",
          "type": "integer",
          "format": "int32"
        },
        "poolsize": {
          "description": "Poolsize of Redis database",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.TDEngineClientConfig": {
      "type": "object",
      "properties": {
        "addr": {
          "description": "addr of tdEngine database",
          "type": "string"
        },
        "dbName": {
          "description": "dbname of tdEngine database",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.Twin": {
      "description": "Twin provides a logical representation of control properties (writable properties in the device model). The properties can have a Desired state and a Reported state. The cloud configures the `Desired`state of a device property and this configuration update is pushed to the edge node. The mapper sends a command to the device to change this property value as per the desired state . It receives the `Reported` state of the property once the previous operation is complete and sends the reported state to the cloud. Offline device interaction in the edge is possible via twin properties for control/command operations.",
      "type": "object",
      "properties": {
        "observedDesired": {
          "description": "The meaning of here is to indicate desired value of `deviceProperty.Desired` that the mapper has received in current cycle. Useful in cases that people want to check whether the mapper is working appropriately and its internal status is up-to-date. This value should be only updated by devicecontroller upstream.",
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.TwinProperty"
        },
        "propertyName": {
          "description": "Required: The property name for which the desired/reported values are specified. This property should be present in the device model.",
          "type": "string"
        },
        "reported": {
          "description": "Required: the reported property value.",
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.TwinProperty"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.TwinProperty": {
      "description": "TwinProperty represents the device property for which an Expected/Actual state can be defined.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "metadata": {
          "description": "Additional metadata like timestamp when the value was reported etc.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "value": {
          "description": "Required: The value for this property.",
          "type": "string",
          "default": ""
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.VisitorConfig": {
      "type": "object",
      "properties": {
        "configData": {
          "description": "Required: The configData of customized protocol",
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.devices.v1beta1.CustomizedValue"
        },
        "protocolName": {
          "description": "Required: name of customized protocol",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImagePrePullJob": {
      "description": "ImagePrePullJob is used to prepull images on edge node.",
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec represents the specification of the desired behavior of ImagePrePullJob.",
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImagePrePullJobSpec"
        },
        "status": {
          "description": "Status represents the status of ImagePrePullJob.",
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImagePrePullJobStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "operations.kubeedge.io",
          "kind": "ImagePrePullJob",
          "version": "v1alpha1"
        }
      ]
    },
    "com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImagePrePullJobList": {
      "description": "ImagePrePullJobList is a list of ImagePrePullJob.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "List of ImagePrePullJob.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImagePrePullJob"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "description": "Standard list metadata.",
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "operations.kubeedge.io",
          "kind": "ImagePrePullJobList",
          "version": "v1alpha1"
        }
      ]
    },
    "com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImagePrePullJobSpec": {
      "description": "ImagePrePullSpec represents the specification of the desired behavior of ImagePrePullJob.",
      "type": "object",
      "properties": {
        "imagePrePullTemplate": {
          "description": "ImagePrepullTemplate represents original templates of imagePrePull",
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImagePrePullTemplate"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImagePrePullJobStatus": {
      "description": "ImagePrePullJobStatus stores the status of ImagePrePullJob. contains images prepull status on multiple edge nodes.",
      "type": "object",
      "properties": {
        "action": {
          "description": "Action represents for the action of the ImagePrePullJob. There are two possible action values: Success, Failure.",
          "type": "string"
        },
        "event": {
          "description": "Event represents for the event of the ImagePrePullJob. There are four possible event values: Init, Check, Pull, TimeOut.",
          "type": "string"
        },
        "reason": {
          "description": "Reason represents for the reason of the ImagePrePullJob.",
          "type": "string"
        },
        "state": {
          "description": "State represents for the state phase of the ImagePrePullJob. There are five possible state values: \"\", checking, pulling, successful, failed.",
          "type": "string"
        },
        "status": {
          "description": "Status contains image prepull status for each edge node.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImagePrePullStatus"
          }
        },
        "time": {
          "description": "Time represents for the running time of the ImagePrePullJob.",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImagePrePullStatus": {
      "description": "ImagePrePullStatus stores image prepull status for each edge node.",
      "type": "object",
      "properties": {
        "imageStatus": {
          "description": "ImageStatus represents the prepull status for each image",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImageStatus"
          }
        },
        "nodeStatus": {
          "description": "TaskStatus represents the status for each node",
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.TaskStatus"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImagePrePullTemplate": {
      "description": "ImagePrePullTemplate represents original templates of imagePrePull",
      "type": "object",
      "properties": {
        "checkItems": {
          "description": "CheckItems specifies the items need to be checked before the task is executed. The default CheckItems value is disk.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "concurrency": {
          "description": "Concurrency specifies the maximum number of edge nodes that can pull images at the same time. The default Concurrency value is 1.",
          "type": "integer",
          "format": "int32"
        },
        "failureTolerate": {
          "description": "FailureTolerate specifies the task tolerance failure ratio. The default FailureTolerate value is 0.1.",
          "type": "string"
        },
        "imageSecrets": {
          "description": "ImageSecret specifies the secret for image pull if private registry used. Use {namespace}/{secretName} in format.",
          "type": "string"
        },
        "images": {
          "description": "Images is the image list to be prepull",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "labelSelector": {
          "description": "LabelSelector is a filter to select member clusters by labels. It must match a node's labels for the NodeUpgradeJob to be operated on that node. Please note that sets of NodeNames and LabelSelector are ORed. Users must set one and can only set one.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "nodeNames": {
          "description": "NodeNames is a request to select some specific nodes. If it is non-empty, the upgrade job simply select these edge nodes to do upgrade operation. Please note that sets of NodeNames and LabelSelector are ORed. Users must set one and can only set one.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "retryTimes": {
          "description": "RetryTimes specifies the retry times if image pull failed on each edgenode. Default to 0",
          "type": "integer",
          "format": "int32"
        },
        "timeoutSeconds": {
          "description": "TimeoutSeconds limits the duration of the node prepull job on each edgenode. Default to 300. If set to 0, we'll use the default value 300.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.ImageStatus": {
      "description": "ImageStatus stores the prepull status for each image.",
      "type": "object",
      "properties": {
        "image": {
          "description": "Image is the name of the image",
          "type": "string"
        },
        "reason": {
          "description": "Reason represents the fail reason if image pull failed",
          "type": "string"
        },
        "state": {
          "description": "State represents for the state phase of this image pull on the edge node There are two possible state values: successful, failed.",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.NodeUpgradeJob": {
      "description": "NodeUpgradeJob is used to upgrade edge node from cloud side.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Specification of the desired behavior of NodeUpgradeJob.",
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.NodeUpgradeJobSpec"
        },
        "status": {
          "description": "Most recently observed status of the NodeUpgradeJob.",
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.NodeUpgradeJobStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "operations.kubeedge.io",
          "kind": "NodeUpgradeJob",
          "version": "v1alpha1"
        }
      ]
    },
    "com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.NodeUpgradeJobList": {
      "description": "NodeUpgradeJobList is a list of NodeUpgradeJob.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "List of NodeUpgradeJobs.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.NodeUpgradeJob"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "description": "Standard list metadata.",
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "operations.kubeedge.io",
          "kind": "NodeUpgradeJobList",
          "version": "v1alpha1"
        }
      ]
    },
    "com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.NodeUpgradeJobSpec": {
      "description": "NodeUpgradeJobSpec is the specification of the desired behavior of the NodeUpgradeJob.",
      "type": "object",
      "properties": {
        "checkItems": {
          "description": "CheckItems specifies the items need to be checked before the task is executed. The default CheckItems value is nil.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "concurrency": {
          "description": "Concurrency specifies the max number of edge nodes that can be upgraded at the same time. The default Concurrency value is 1.",
          "type": "integer",
          "format": "int32"
        },
        "failureTolerate": {
          "description": "FailureTolerate specifies the task tolerance failure ratio. The default FailureTolerate value is 0.1.",
          "type": "string"
        },
        "image": {
          "description": "Image specifies a container image name, the image contains: keadm and edgecore. keadm is used as upgradetool, to install the new version of edgecore. The image name consists of registry hostname and repository name, if it includes the tag or digest, the tag or digest will be overwritten by Version field above. If the registry hostname is empty, docker.io will be used as default. The default image name is: kubeedge/installation-package.",
          "type": "string"
        },
        "labelSelector": {
          "description": "LabelSelector is a filter to select member clusters by labels. It must match a node's labels for the NodeUpgradeJob to be operated on that node. Please note that sets of NodeNames and LabelSelector are ORed. Users must set one and can only set one.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "nodeNames": {
          "description": "NodeNames is a request to select some specific nodes. If it is non-empty, the upgrade job simply select these edge nodes to do upgrade operation. Please note that sets of NodeNames and LabelSelector are ORed. Users must set one and can only set one.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "timeoutSeconds": {
          "description": "TimeoutSeconds limits the duration of the node upgrade job. Default to 300. If set to 0, we'll use the default value 300.",
          "type": "integer",
          "format": "int64"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.NodeUpgradeJobStatus": {
      "description": "NodeUpgradeJobStatus stores the status of NodeUpgradeJob. contains multiple edge nodes upgrade status.",
      "type": "object",
      "properties": {
        "action": {
          "description": "Action represents for the action of the ImagePrePullJob. There are two possible action values: Success, Failure.",
          "type": "string"
        },
        "currentVersion": {
          "description": "CurrentVersion represents for the current status of the EdgeCore.",
          "type": "string"
        },
        "event": {
          "description": "Event represents for the event of the ImagePrePullJob. There are six possible event values: Init, Check, BackUp, Upgrade, TimeOut, Rollback.",
          "type": "string"
        },
        "historicVersion": {
          "description": "HistoricVersion represents for the historic status of the EdgeCore.",
          "type": "string"
        },
        "nodeStatus": {
          "description": "Status contains upgrade Status for each edge node.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.TaskStatus"
          }
        },
        "reason": {
          "description": "Reason represents for the reason of the ImagePrePullJob.",
          "type": "string"
        },
        "state": {
          "description": "State represents for the state phase of the NodeUpgradeJob. There are several possible state values: \"\", Upgrading, BackingUp, RollingBack and Checking.",
          "type": "string"
        },
        "time": {
          "description": "Time represents for the running time of the ImagePrePullJob.",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.operations.v1alpha1.TaskStatus": {
      "description": "TaskStatus stores the status of Upgrade for each edge node.",
      "type": "object",
      "properties": {
        "action": {
          "description": "Action represents for the action of the ImagePrePullJob. There are three possible action values: Success, Failure, TimeOut.",
          "type": "string"
        },
        "event": {
          "description": "Event represents for the event of the ImagePrePullJob. There are three possible event values: Init, Check, Pull.",
          "type": "string"
        },
        "nodeName": {
          "description": "NodeName is the name of edge node.",
          "type": "string"
        },
        "reason": {
          "description": "Reason represents for the reason of the ImagePrePullJob.",
          "type": "string"
        },
        "state": {
          "description": "State represents for the upgrade state phase of the edge node. There are several possible state values: \"\", Upgrading, BackingUp, RollingBack and Checking.",
          "type": "string"
        },
        "time": {
          "description": "Time represents for the running time of the ImagePrePullJob.",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.AccessClusterRoleBinding": {
      "description": "AccessClusterRoleBinding represents rbac ClusterRoleBinding plus detailed ClusterRole info.",
      "type": "object",
      "properties": {
        "clusterRoleBinding": {
          "description": "ClusterRoleBinding represents rbac ClusterRoleBinding.",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.rbac.v1.ClusterRoleBinding"
        },
        "rules": {
          "description": "Rules contains role rules.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.rbac.v1.PolicyRule"
          }
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.AccessRoleBinding": {
      "description": "AccessRoleBinding represents rbac rolebinding plus detailed role info.",
      "type": "object",
      "properties": {
        "roleBinding": {
          "description": "RoleBinding represents rbac rolebinding.",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.rbac.v1.RoleBinding"
        },
        "rules": {
          "description": "Rules contains role rules.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.rbac.v1.PolicyRule"
          }
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.AccessSpec": {
      "description": "AccessSpec defines the desired state of AccessSpec",
      "type": "object",
      "properties": {
        "accessClusterRoleBinding": {
          "description": "AccessClusterRoleBinding represents rbac ClusterRoleBinding plus detailed ClusterRole info.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.AccessClusterRoleBinding"
          }
        },
        "accessRoleBinding": {
          "description": "AccessRoleBinding represents rbac rolebinding plus detailed role info.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.AccessRoleBinding"
          }
        },
        "serviceAccount": {
          "description": "ServiceAccount is one-to-one corresponding relations with the serviceaccountaccess.",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.core.v1.ServiceAccount"
        },
        "serviceAccountUid": {
          "description": "ServiceAccountUID is the uid of serviceaccount.",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.AccessStatus": {
      "description": "AccessStatus defines the observed state of ServiceAccountAccess",
      "type": "object",
      "properties": {
        "nodeList": {
          "description": "NodeList represents the node name which store the rules.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.ServiceAccountAccess": {
      "description": "ServiceAccountAccess is the Schema for the ServiceAccountAccess API",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec represents the specification of rbac.",
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.AccessSpec"
        },
        "status": {
          "description": "Status represents the node list which store the rules.",
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.AccessStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "policy.kubeedge.io",
          "kind": "ServiceAccountAccess",
          "version": "v1alpha1"
        }
      ]
    },
    "com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.ServiceAccountAccessList": {
      "description": "ServiceAccountAccessList contains a list of ServiceAccountAccess",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.policy.v1alpha1.ServiceAccountAccess"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "policy.kubeedge.io",
          "kind": "ServiceAccountAccessList",
          "version": "v1alpha1"
        }
      ]
    },
    "com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ClusterObjectSync": {
      "description": "ClusterObjectSync stores the state of the cluster level, nonNamespaced object that was successfully persisted to the edge node. ClusterObjectSync name is a concatenation of the node name which receiving the object and the object UUID.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ObjectSyncSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ObjectSyncStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "reliablesyncs.kubeedge.io",
          "kind": "ClusterObjectSync",
          "version": "v1alpha1"
        }
      ]
    },
    "com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ClusterObjectSyncList": {
      "description": "ClusterObjectSyncList is a list of ObjectSync.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "List of ClusterObjectSync.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ClusterObjectSync"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "description": "Standard list metadata.",
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "reliablesyncs.kubeedge.io",
          "kind": "ClusterObjectSyncList",
          "version": "v1alpha1"
        }
      ]
    },
    "com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ObjectSync": {
      "description": "ObjectSync stores the state of the namespaced object that was successfully persisted to the edge node. ObjectSync name is a concatenation of the node name which receiving the object and the object UUID.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "description": "Standard Kubernetes object's metadata.",
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ObjectSyncSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ObjectSyncStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "reliablesyncs.kubeedge.io",
          "kind": "ObjectSync",
          "version": "v1alpha1"
        }
      ]
    },
    "com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ObjectSyncList": {
      "description": "ObjectSyncList is a list of ObjectSync.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "description": "List of ObjectSync.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ObjectSync"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "description": "Standard list metadata.",
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "reliablesyncs.kubeedge.io",
          "kind": "ObjectSyncList",
          "version": "v1alpha1"
        }
      ]
    },
    "com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ObjectSyncSpec": {
      "description": "ObjectSyncSpec stores the details of objects that persist to the edge.",
      "type": "object",
      "properties": {
        "objectAPIVersion": {
          "description": "ObjectAPIVersion is the APIVersion of the object that was successfully persist to the edge node.",
          "type": "string"
        },
        "objectKind": {
          "description": "ObjectType is the kind of the object that was successfully persist to the edge node.",
          "type": "string"
        },
        "objectName": {
          "description": "ObjectName is the name of the object that was successfully persist to the edge node.",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.reliablesyncs.v1alpha1.ObjectSyncStatus": {
      "description": "ObjectSyncStatus stores the resourceversion of objects that persist to the edge.",
      "type": "object",
      "properties": {
        "objectResourceVersion": {
          "description": "ObjectResourceVersion is the resourceversion of the object that was successfully persist to the edge node.",
          "type": "string"
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.rules.v1.Rule": {
      "description": "Rule is the Schema for the rules API",
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.rules.v1.RuleSpec"
        },
        "status": {
          "default": {},
          "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.rules.v1.RuleStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "rules.kubeedge.io",
          "kind": "Rule",
          "version": "v1"
        }
      ]
    },
    "com.github.kubeedge.kubeedge.pkg.apis.rules.v1.RuleList": {
      "description": "RuleList contains a list of Rule",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/com.github.kubeedge.kubeedge.pkg.apis.rules.v1.Rule"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "rules.kubeedge.io",
          "kind": "RuleList",
          "version": "v1"
        }
      ]
    },
    "com.github.kubeedge.kubeedge.pkg.apis.rules.v1.RuleSpec": {
      "description": "RuleSpec defines rule of message delivery.",
      "type": "object",
      "required": [
        "source",
        "sourceResource",
        "target",
        "targetResource"
      ],
      "properties": {
        "source": {
          "description": "Source represents where the messages come from. Its value is the same with ruleendpoint name. For example, rest or eventbus.",
          "type": "string",
          "default": ""
        },
        "sourceResource": {
          "description": "SourceResource is a map representing the resource info of source. For rest ruleendpoint type its value is {\"path\":\"/a/b\"}. For eventbus ruleendpoint type its value is {\"topic\":\"\u003cuser define string\u003e\",\"node_name\":\"xxxx\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "target": {
          "description": "Target represents where the messages go to. its value is the same with ruleendpoint name. For example, eventbus or api or servicebus.",
          "type": "string",
          "default": ""
        },
        "targetResource": {
          "description": "targetResource is a map representing the resource info of target. For api ruleendpoint type its value is {\"resource\":\"http://a.com\"}. For eventbus ruleendpoint type its value is {\"topic\":\"/xxxx\"}. For servicebus ruleendpoint type its value is {\"path\":\"/request_path\"}.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "com.github.kubeedge.kubeedge.pkg.apis.rules.v1.RuleStatus": {
      "description": "RuleStatus defines status of message delivery.",
      "type": "object",
      "required": [
        "successMessages",
        "failMessages",
        "errors"
      ],
      "properties": {
        "errors": {
          "description": "Errors represents failed reasons of message delivery of rule.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "failMessages": {
          "description": "FailMessages represents failed count of message delivery of rule.",
          "type": "integer",
          "format": "int64",
          "default": 0
        },
        "successMessages": {
          "description": "SuccessMessages represents success count of message delivery of rule.",
          "type": "integer",
          "format": "int64",
          "default": 0
        }
      }
    },
    "io.k8s.api.core.v1.ConfigMapKeySelector": {
      "description": "Selects a key from a ConfigMap.",
      "type": "object",
      "required": [
        "key"
      ],
      "properties": {
        "key": {
          "description": "The key to select.",
          "type": "string",
          "default": ""
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "Specify whether the ConfigMap or its key must be defined",
          "type": "boolean"
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.EnvVar": {
      "description": "EnvVar represents an environment variable present in a Container.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
          "type": "string",
          "default": ""
        },
        "value": {
          "description": "Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
          "type": "string"
        },
        "valueFrom": {
          "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
          "$ref": "#/definitions/io.k8s.api.core.v1.EnvVarSource"
        }
      }
    },
    "io.k8s.api.core.v1.EnvVarSource": {
      "description": "EnvVarSource represents a source for the value of an EnvVar.",
      "type": "object",
      "properties": {
        "configMapKeyRef": {
          "description": "Selects a key of a ConfigMap.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector"
        },
        "fieldRef": {
          "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectFieldSelector"
        },
        "resourceFieldRef": {
          "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceFieldSelector"
        },
        "secretKeyRef": {
          "description": "Selects a key of a secret in the pod's namespace",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.k8s.api.core.v1.LocalObjectReference": {
      "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.NodeSelector": {
      "description": "A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.",
      "type": "object",
      "required": [
        "nodeSelectorTerms"
      ],
      "properties": {
        "nodeSelectorTerms": {
          "description": "Required. A list of node selector terms. The terms are ORed.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorTerm"
          }
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.NodeSelectorRequirement": {
      "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      "type": "object",
      "required": [
        "key",
        "operator"
      ],
      "properties": {
        "key": {
          "description": "The label key that the selector applies to.",
          "type": "string",
          "default": ""
        },
        "operator": {
          "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\nPossible enum values:\n - `\"DoesNotExist\"`\n - `\"Exists\"`\n - `\"Gt\"`\n - `\"In\"`\n - `\"Lt\"`\n - `\"NotIn\"`",
          "type": "string",
          "default": "",
          "enum": [
            "DoesNotExist",
            "Exists",
            "Gt",
            "In",
            "Lt",
            "NotIn"
          ]
        },
        "values": {
          "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "io.k8s.api.core.v1.NodeSelectorTerm": {
      "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
      "type": "object",
      "properties": {
        "matchExpressions": {
          "description": "A list of node selector requirements by node's labels.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorRequirement"
          }
        },
        "matchFields": {
          "description": "A list of node selector requirements by node's fields.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorRequirement"
          }
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.ObjectFieldSelector": {
      "description": "ObjectFieldSelector selects an APIVersioned field of an object.",
      "type": "object",
      "required": [
        "fieldPath"
      ],
      "properties": {
        "apiVersion": {
          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
          "type": "string"
        },
        "fieldPath": {
          "description": "Path of the field to select in the specified API version.",
          "type": "string",
          "default": ""
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.ObjectReference": {
      "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "API version of the referent.",
          "type": "string"
        },
        "fieldPath": {
          "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.",
          "type": "string"
        },
        "kind": {
          "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
          "type": "string"
        },
        "resourceVersion": {
          "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "uid": {
          "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
          "type": "string"
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.ResourceClaim": {
      "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.",
          "type": "string",
          "default": ""
        }
      }
    },
    "io.k8s.api.core.v1.ResourceFieldSelector": {
      "description": "ResourceFieldSelector represents container resources (cpu, memory) and their output format",
      "type": "object",
      "required": [
        "resource"
      ],
      "properties": {
        "containerName": {
          "description": "Container name: required for volumes, optional for env vars",
          "type": "string"
        },
        "divisor": {
          "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "resource": {
          "description": "Required: resource to select",
          "type": "string",
          "default": ""
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.ResourceRequirements": {
      "description": "ResourceRequirements describes the compute resource requirements.",
      "type": "object",
      "properties": {
        "claims": {
          "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.ResourceClaim"
          },
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map"
        },
        "limits": {
          "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "type": "object",
          "additionalProperties": {
            "default": {},
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "requests": {
          "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "type": "object",
          "additionalProperties": {
            "default": {},
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        }
      }
    },
    "io.k8s.api.core.v1.SecretKeySelector": {
      "description": "SecretKeySelector selects a key of a Secret.",
      "type": "object",
      "required": [
        "key"
      ],
      "properties": {
        "key": {
          "description": "The key of the secret to select from.  Must be a valid secret key.",
          "type": "string",
          "default": ""
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "Specify whether the Secret or its key must be defined",
          "type": "boolean"
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.ServiceAccount": {
      "description": "ServiceAccount binds together: * a name, understood by users, and perhaps by peripheral systems, for an identity * a principal that can be authenticated and authorized * a set of secrets",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "automountServiceAccountToken": {
          "description": "AutomountServiceAccountToken indicates whether pods running as this service account should have an API token automatically mounted. Can be overridden at the pod level.",
          "type": "boolean"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "secrets": {
          "description": "Secrets is a list of the secrets in the same namespace that pods running using this ServiceAccount are allowed to use. Pods are only limited to this list if this service account has a \"kubernetes.io/enforce-mountable-secrets\" annotation set to \"true\". This field should not be used to find auto-generated service account token secrets for use outside of pods. Instead, tokens can be requested directly using the TokenRequest API, or service account token secrets can be manually created. More info: https://kubernetes.io/docs/concepts/configuration/secret",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ServiceAccount",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.rbac.v1.ClusterRoleBinding": {
      "description": "ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a ClusterRole in the global namespace, and adds who information via Subject.",
      "type": "object",
      "required": [
        "roleRef"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "roleRef": {
          "description": "RoleRef can only reference a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error. This field is immutable.",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.rbac.v1.RoleRef"
        },
        "subjects": {
          "description": "Subjects holds references to the objects the role applies to.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.rbac.v1.Subject"
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "ClusterRoleBinding",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.rbac.v1.PolicyRule": {
      "description": "PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.",
      "type": "object",
      "required": [
        "verbs"
      ],
      "properties": {
        "apiGroups": {
          "description": "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed. \"\" represents the core API group and \"*\" represents all API groups.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "nonResourceURLs": {
          "description": "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as \"pods\" or \"secrets\") or non-resource URL paths (such as \"/api\"),  but not both.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "resourceNames": {
          "description": "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "resources": {
          "description": "Resources is a list of resources this rule applies to. '*' represents all resources.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "verbs": {
          "description": "Verbs is a list of Verbs that apply to ALL the ResourceKinds contained in this rule. '*' represents all verbs.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "io.k8s.api.rbac.v1.RoleBinding": {
      "description": "RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace.",
      "type": "object",
      "required": [
        "roleRef"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "description": "Standard object's metadata.",
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "roleRef": {
          "description": "RoleRef can reference a Role in the current namespace or a ClusterRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error. This field is immutable.",
          "default": {},
          "$ref": "#/definitions/io.k8s.api.rbac.v1.RoleRef"
        },
        "subjects": {
          "description": "Subjects holds references to the objects the role applies to.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.api.rbac.v1.Subject"
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "RoleBinding",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.rbac.v1.RoleRef": {
      "description": "RoleRef contains information that points to the role being used",
      "type": "object",
      "required": [
        "apiGroup",
        "kind",
        "name"
      ],
      "properties": {
        "apiGroup": {
          "description": "APIGroup is the group for the resource being referenced",
          "type": "string",
          "default": ""
        },
        "kind": {
          "description": "Kind is the type of resource being referenced",
          "type": "string",
          "default": ""
        },
        "name": {
          "description": "Name is the name of resource being referenced",
          "type": "string",
          "default": ""
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.rbac.v1.Subject": {
      "description": "Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.",
      "type": "object",
      "required": [
        "kind",
        "name"
      ],
      "properties": {
        "apiGroup": {
          "description": "APIGroup holds the API group of the referenced subject. Defaults to \"\" for ServiceAccount subjects. Defaults to \"rbac.authorization.k8s.io\" for User and Group subjects.",
          "type": "string"
        },
        "kind": {
          "description": "Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\". If the Authorizer does not recognized the kind value, the Authorizer should report an error.",
          "type": "string",
          "default": ""
        },
        "name": {
          "description": "Name of the object being referenced.",
          "type": "string",
          "default": ""
        },
        "namespace": {
          "description": "Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty the Authorizer should report an error.",
          "type": "string"
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.apimachinery.pkg.api.resource.Quantity": {
      "description": "Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n``` \u003cquantity\u003e        ::= \u003csignedNumber\u003e\u003csuffix\u003e\n\n\t(Note that \u003csuffix\u003e may be empty, from the \"\" case in \u003cdecimalSI\u003e.)\n\n\u003cdigit\u003e           ::= 0 | 1 | ... | 9 \u003cdigits\u003e          ::= \u003cdigit\u003e | \u003cdigit\u003e\u003cdigits\u003e \u003cnumber\u003e          ::= \u003cdigits\u003e | \u003cdigits\u003e.\u003cdigits\u003e | \u003cdigits\u003e. | .\u003cdigits\u003e \u003csign\u003e            ::= \"+\" | \"-\" \u003csignedNumber\u003e    ::= \u003cnumber\u003e | \u003csign\u003e\u003cnumber\u003e \u003csuffix\u003e          ::= \u003cbinarySI\u003e | \u003cdecimalExponent\u003e | \u003cdecimalSI\u003e \u003cbinarySI\u003e        ::= Ki | Mi | Gi | Ti | Pi | Ei\n\n\t(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n\n\u003cdecimalSI\u003e       ::= m | \"\" | k | M | G | T | P | E\n\n\t(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n\n\u003cdecimalExponent\u003e ::= \"e\" \u003csignedNumber\u003e | \"E\" \u003csignedNumber\u003e ```\n\nNo matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:\n\n- No precision is lost - No fractional digits will be emitted - The exponent (or suffix) is as large as possible.\n\nThe sign will be omitted unless the number is negative.\n\nExamples:\n\n- 1.5 will be serialized as \"1500m\" - 1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.",
      "type": "string"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup": {
      "description": "APIGroup contains the name, the supported versions, and the preferred version of a group.",
      "type": "object",
      "required": [
        "name",
        "versions"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "name": {
          "description": "name is the name of the group.",
          "type": "string",
          "default": ""
        },
        "preferredVersion": {
          "description": "preferredVersion is the version preferred by the API server, which probably is the storage version.",
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery"
        },
        "serverAddressByClientCIDRs": {
          "description": "a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR"
          }
        },
        "versions": {
          "description": "versions are the versions supported in this group.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery"
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "APIGroup",
          "version": "v1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList": {
      "description": "APIGroupList is a list of APIGroup, to allow clients to discover the API at /apis.",
      "type": "object",
      "required": [
        "groups"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "groups": {
          "description": "groups is a list of APIGroup.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "APIGroupList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.APIResource": {
      "description": "APIResource specifies the name of a resource and whether it is namespaced.",
      "type": "object",
      "required": [
        "name",
        "singularName",
        "namespaced",
        "kind",
        "verbs"
      ],
      "properties": {
        "categories": {
          "description": "categories is a list of the grouped resources this resource belongs to (e.g. 'all')",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "group": {
          "description": "group is the preferred group of the resource.  Empty implies the group of the containing resource list. For subresources, this may have a different value, for example: Scale\".",
          "type": "string"
        },
        "kind": {
          "description": "kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')",
          "type": "string",
          "default": ""
        },
        "name": {
          "description": "name is the plural name of the resource.",
          "type": "string",
          "default": ""
        },
        "namespaced": {
          "description": "namespaced indicates if a resource is namespaced or not.",
          "type": "boolean",
          "default": false
        },
        "shortNames": {
          "description": "shortNames is a list of suggested short names of the resource.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "singularName": {
          "description": "singularName is the singular name of the resource.  This allows clients to handle plural and singular opaquely. The singularName is more correct for reporting status on a single item and both singular and plural are allowed from the kubectl CLI interface.",
          "type": "string",
          "default": ""
        },
        "storageVersionHash": {
          "description": "The hash value of the storage version, the version this resource is converted to when written to the data store. Value must be treated as opaque by clients. Only equality comparison on the value is valid. This is an alpha feature and may change or be removed in the future. The field is populated by the apiserver only if the StorageVersionHash feature gate is enabled. This field will remain optional even if it graduates.",
          "type": "string"
        },
        "verbs": {
          "description": "verbs is a list of supported kube verbs (this includes get, list, watch, create, update, patch, delete, deletecollection, and proxy)",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "version": {
          "description": "version is the preferred version of the resource.  Empty implies the version of the containing resource list For subresources, this may have a different value, for example: v1 (while inside a v1beta1 version of the core resource's group)\".",
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList": {
      "description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
      "type": "object",
      "required": [
        "groupVersion",
        "resources"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "groupVersion": {
          "description": "groupVersion is the group and version this APIResourceList is for.",
          "type": "string",
          "default": ""
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "resources": {
          "description": "resources contains the name of the resources and if they are namespaced.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResource"
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "APIResourceList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions": {
      "description": "DeleteOptions may be provided when deleting an API object.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "dryRun": {
          "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "gracePeriodSeconds": {
          "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
          "type": "integer",
          "format": "int64"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "orphanDependents": {
          "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
          "type": "boolean"
        },
        "preconditions": {
          "description": "Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions"
        },
        "propagationPolicy": {
          "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "admissionregistration.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "admissionregistration.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "admissionregistration.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "apps",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "apps",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "apps",
          "kind": "DeleteOptions",
          "version": "v1beta2"
        },
        {
          "group": "apps.kubeedge.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "authentication.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "authentication.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "authentication.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "authorization.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "authorization.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "autoscaling",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "autoscaling",
          "kind": "DeleteOptions",
          "version": "v2"
        },
        {
          "group": "autoscaling",
          "kind": "DeleteOptions",
          "version": "v2beta1"
        },
        {
          "group": "autoscaling",
          "kind": "DeleteOptions",
          "version": "v2beta2"
        },
        {
          "group": "batch",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "batch",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "certificates.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "certificates.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "certificates.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "coordination.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "coordination.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "devices.kubeedge.io",
          "kind": "DeleteOptions",
          "version": "v1alpha2"
        },
        {
          "group": "devices.kubeedge.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "discovery.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "discovery.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "events.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "events.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "extensions",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta2"
        },
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta3"
        },
        {
          "group": "internal.apiserver.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "networking.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "networking.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "networking.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "node.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "node.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "node.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "operations.kubeedge.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "policy",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "policy",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "policy.kubeedge.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "reliablesyncs.kubeedge.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "resource.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha2"
        },
        {
          "group": "rules.kubeedge.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "scheduling.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "scheduling.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "scheduling.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "storage.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "storage.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "storage.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1": {
      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:\u003cname\u003e', where \u003cname\u003e is the name of a field in a struct, or key in a map 'v:\u003cvalue\u003e', where \u003cvalue\u003e is the exact json formatted value of a list item 'i:\u003cindex\u003e', where \u003cindex\u003e is position of a item in a list 'k:\u003ckeys\u003e', where \u003ckeys\u003e is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery": {
      "description": "GroupVersion contains the \"group/version\" and \"version\" string of a version. It is made a struct to keep extensibility.",
      "type": "object",
      "required": [
        "groupVersion",
        "version"
      ],
      "properties": {
        "groupVersion": {
          "description": "groupVersion specifies the API group and version in the form \"group/version\"",
          "type": "string",
          "default": ""
        },
        "version": {
          "description": "version specifies the version in the form of \"version\". This is to save the clients the trouble of splitting the GroupVersion.",
          "type": "string",
          "default": ""
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector": {
      "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
      "type": "object",
      "properties": {
        "matchExpressions": {
          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement"
          }
        },
        "matchLabels": {
          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement": {
      "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      "type": "object",
      "required": [
        "key",
        "operator"
      ],
      "properties": {
        "key": {
          "description": "key is the label key that the selector applies to.",
          "type": "string",
          "default": ""
        },
        "operator": {
          "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
          "type": "string",
          "default": ""
        },
        "values": {
          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta": {
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "type": "object",
      "properties": {
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
          "type": "string"
        },
        "remainingItemCount": {
          "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
          "type": "integer",
          "format": "int64"
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "selfLink": {
          "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry": {
      "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
          "type": "string"
        },
        "fieldsType": {
          "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
          "type": "string"
        },
        "fieldsV1": {
          "description": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1"
        },
        "manager": {
          "description": "Manager is an identifier of the workflow managing these fields.",
          "type": "string"
        },
        "operation": {
          "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
          "type": "string"
        },
        "subresource": {
          "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
          "type": "string"
        },
        "time": {
          "description": "Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta": {
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "creationTimestamp": {
          "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
          "type": "integer",
          "format": "int64"
        },
        "deletionTimestamp": {
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          },
          "x-kubernetes-patch-strategy": "merge"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
          "type": "string"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
          "type": "integer",
          "format": "int64"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces",
          "type": "string"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"
          },
          "x-kubernetes-patch-merge-key": "uid",
          "x-kubernetes-patch-strategy": "merge"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "selfLink": {
          "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
          "type": "string"
        },
        "uid": {
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference": {
      "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
      "type": "object",
      "required": [
        "apiVersion",
        "kind",
        "name",
        "uid"
      ],
      "properties": {
        "apiVersion": {
          "description": "API version of the referent.",
          "type": "string",
          "default": ""
        },
        "blockOwnerDeletion": {
          "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
          "type": "boolean"
        },
        "controller": {
          "description": "If true, this reference points to the managing controller.",
          "type": "boolean"
        },
        "kind": {
          "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "default": ""
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
          "type": "string",
          "default": ""
        },
        "uid": {
          "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
          "type": "string",
          "default": ""
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Patch": {
      "description": "Patch is provided to give a concrete name and type to the Kubernetes PATCH request body.",
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions": {
      "description": "Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.",
      "type": "object",
      "properties": {
        "resourceVersion": {
          "description": "Specifies the target ResourceVersion",
          "type": "string"
        },
        "uid": {
          "description": "Specifies the target UID.",
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR": {
      "description": "ServerAddressByClientCIDR helps the client to determine the server address that they should use, depending on the clientCIDR that they match.",
      "type": "object",
      "required": [
        "clientCIDR",
        "serverAddress"
      ],
      "properties": {
        "clientCIDR": {
          "description": "The CIDR with which clients can match their IP to figure out the server address that they should use.",
          "type": "string",
          "default": ""
        },
        "serverAddress": {
          "description": "Address of this server, suitable for a client that matches the above CIDR. This can be a hostname, hostname:port, IP or IP:port.",
          "type": "string",
          "default": ""
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Status": {
      "description": "Status is a return value for calls that don't return other objects.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "code": {
          "description": "Suggested HTTP return code for this status, 0 if not set.",
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "description": "Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "message": {
          "description": "A human-readable description of the status of this operation.",
          "type": "string"
        },
        "metadata": {
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        },
        "reason": {
          "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.",
          "type": "string"
        },
        "status": {
          "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Status",
          "version": "v1"
        },
        {
          "group": "resource.k8s.io",
          "kind": "Status",
          "version": "v1alpha2"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause": {
      "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
      "type": "object",
      "properties": {
        "field": {
          "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"",
          "type": "string"
        },
        "message": {
          "description": "A human-readable description of the cause of the error.  This field may be presented as-is to a reader.",
          "type": "string"
        },
        "reason": {
          "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available.",
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails": {
      "description": "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
      "type": "object",
      "properties": {
        "causes": {
          "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.",
          "type": "array",
          "items": {
            "default": {},
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause"
          }
        },
        "group": {
          "description": "The group attribute of the resource associated with the status StatusReason.",
          "type": "string"
        },
        "kind": {
          "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "name": {
          "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).",
          "type": "string"
        },
        "retryAfterSeconds": {
          "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.",
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "UID of the resource. (when there is a single resource which can be described). More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Time": {
      "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
      "type": "string",
      "format": "date-time"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent": {
      "description": "Event represents a single event to a watched resource.",
      "type": "object",
      "required": [
        "type",
        "object"
      ],
      "properties": {
        "object": {
          "description": "Object is:\n * If Type is Added or Modified: the new state of the object.\n * If Type is Deleted: the state of the object immediately before deletion.\n * If Type is Error: *Status is recommended; other types may make sense\n   depending on context.",
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
        },
        "type": {
          "type": "string",
          "default": ""
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "admissionregistration.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "admissionregistration.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "admissionregistration.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "apps",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "apps",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "apps",
          "kind": "WatchEvent",
          "version": "v1beta2"
        },
        {
          "group": "apps.kubeedge.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "authentication.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "authentication.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "authentication.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "authorization.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "authorization.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "autoscaling",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "autoscaling",
          "kind": "WatchEvent",
          "version": "v2"
        },
        {
          "group": "autoscaling",
          "kind": "WatchEvent",
          "version": "v2beta1"
        },
        {
          "group": "autoscaling",
          "kind": "WatchEvent",
          "version": "v2beta2"
        },
        {
          "group": "batch",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "batch",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "certificates.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "certificates.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "certificates.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "coordination.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "coordination.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "devices.kubeedge.io",
          "kind": "WatchEvent",
          "version": "v1alpha2"
        },
        {
          "group": "devices.kubeedge.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "discovery.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "discovery.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "events.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "events.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "extensions",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta2"
        },
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta3"
        },
        {
          "group": "internal.apiserver.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "networking.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "networking.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "networking.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "node.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "node.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "node.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "operations.kubeedge.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "policy",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "policy",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "policy.kubeedge.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "reliablesyncs.kubeedge.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "resource.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha2"
        },
        {
          "group": "rules.kubeedge.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "scheduling.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "scheduling.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "scheduling.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "storage.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "storage.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "storage.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.runtime.RawExtension": {
      "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)",
      "type": "object"
    }
  },
  "parameters": {
    "allowWatchBookmarks-HC2hJt-J": {
      "uniqueItems": true,
      "type": "boolean",
      "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
      "name": "allowWatchBookmarks",
      "in": "query"
    },
    "body-2Y1dVQaQ": {
      "name": "body",
      "in": "body",
      "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
      }
    },
    "body-78PwaGsr": {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
      }
    },
    "continue-QfD61s0i": {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
    },
    "fieldManager-7c6nTn1T": {
      "uniqueItems": true,
      "type": "string",
      "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
      "name": "fieldManager",
      "in": "query"
    },
    "fieldManager-Qy4HdaTW": {
      "uniqueItems": true,
      "type": "string",
      "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
      "name": "fieldManager",
      "in": "query"
    },
    "fieldSelector-xIcQKXFG": {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
    },
    "force-tOGGb0Yi": {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
      "name": "force",
      "in": "query"
    },
    "gracePeriodSeconds--K5HaBOS": {
      "uniqueItems": true,
      "type": "integer",
      "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
      "name": "gracePeriodSeconds",
      "in": "query"
    },
    "labelSelector-5Zw57w4C": {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
      "name": "labelSelector",
      "in": "query"
    },
    "limit-1NfNmdNH": {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
    },
    "namespace-vgWSWtn3": {
      "uniqueItems": true,
      "type": "string",
      "description": "object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
    },
    "orphanDependents-uRB25kX5": {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
      "name": "orphanDependents",
      "in": "query"
    },
    "pretty-nN7o5FEq": {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
    },
    "propagationPolicy-6jk3prlO": {
      "uniqueItems": true,
      "type": "string",
      "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
      "name": "propagationPolicy",
      "in": "query"
    },
    "resourceVersion-5WAnf1kx": {
      "uniqueItems": true,
      "type": "string",
      "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
      "name": "resourceVersion",
      "in": "query"
    },
    "resourceVersionMatch-t8XhRHeC": {
      "uniqueItems": true,
      "type": "string",
      "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
      "name": "resourceVersionMatch",
      "in": "query"
    },
    "sendInitialEvents-rLXlEK_k": {
      "uniqueItems": true,
      "type": "boolean",
      "description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
      "name": "sendInitialEvents",
      "in": "query"
    },
    "timeoutSeconds-yvYezaOC": {
      "uniqueItems": true,
      "type": "integer",
      "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
      "name": "timeoutSeconds",
      "in": "query"
    },
    "watch-XNNPZGbK": {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
    }
  }
}
