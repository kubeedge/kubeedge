mqtt:
    server: tcp://127.0.0.1:1883 # external mqtt broker url.
    internal-server: tcp://127.0.0.1:1884 # internal mqtt broker url.
    mode: 0 # 0: internal mqtt broker enable only. 1: internal and external mqtt broker enable. 2: external mqtt broker enable only.
    qos: 0 # 0: QOSAtMostOnce, 1: QOSAtLeastOnce, 2: QOSExactlyOnce.
    retain: false # if the flag set true, server will store the message and can be delivered to future subscribers.
    session-queue-size: 100 # A size of how many sessions will be handled. default to 100.

controller:
    kube:
       master: http://localhost:8080
       namespace: "default"
       content_type: "application/vnd.kubernetes.protobuf"
       qps: 5
       burst: 10
       node_update_frequency: 10
       node-id: edge-node
       node-name: edge-node
    context:
       send-module: metaManager
       receive-module: edgecontroller
       response-module: metaManager

edged:
    register-node-namespace: default
    hostname-override: edge-node
    interface-name: eth0
    node-status-update-frequency: 10 # second
    device-plugin-enabled: false
    gpu-plugin-enabled: false
    image-gc-high-threshold: 80 # percent
    image-gc-low-threshold: 40 # percent
    maximum-dead-containers-per-container: 1
    docker-address: unix:///var/run/docker.sock
    runtime-type: docker
    remote-runtime-endpoint: unix:///var/run/dockershim.sock
    remote-image-endpoint: unix:///var/run/dockershim.sock
    runtime-request-timeout: 2
    podsandbox-image: k8s.gcr.io/pause
    image-pull-progress-deadline: 60 # second
    cgroup-driver: cgroupfs
    node-ip: ""
    cluster-dns: ""
    cluster-domain: ""
    edged-memory-capacity-bytes: 7852396000

metamanager:
    context-send-group: edgecontroller
    context-send-module: edgecontroller
    edgesite: true
