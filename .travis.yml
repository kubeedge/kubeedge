language: go

sudo: required

dist: trusty

services:
  - docker

go:
  - 1.12

before_install:
  - |
      if ! git diff --name-only $TRAVIS_COMMIT_RANGE | grep -qvE '(\.md)|(\.png)|(\.pdf)|(\.html)|^(LICENSE)|^(docs)'
      then
        echo "Only doc files were updated, skip running the CI."
        travis_terminate 0
      fi

before_script:
  - curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | BINARY=golangci-lint sh -s -- -d -b $(go env GOPATH)/bin v1.20.0
  - mkdir -p $HOME/gopath/src/github.com/kubeedge/kubeedge
  - sudo apt-get install build-essential -y
  - sudo apt-get install gcc-arm-linux-gnueabi -y
  - sudo apt-get install upx-ucl -y
  - sudo apt-get install rsync -y
  - rsync -az ${TRAVIS_BUILD_DIR}/ $HOME/gopath/src/github.com/kubeedge/kubeedge/
  - export TRAVIS_BUILD_DIR=$HOME/gopath/src/github.com/kubeedge/kubeedgee
  - go get github.com/onsi/ginkgo/ginkgo
  - export GO111MODULE=on
  - export GOFLAGS=-mod=vendor
  - cd $HOME/gopath/src/github.com/kubeedge/kubeedge

install: true

jobs:
  include:
    # Multiple stages in travis cannot run in parallel
    # But jobs in a stage can run in parallel
    # Now travis can only run 3 jobs in parallel
    # So we just use 2 stages and 3 jobs in each stage
    # The first stage is "ci on amd64", run in amd64 platform
    # The second stage is "ci on arm64", run in arm64 platform
    # And we put the longest-consuming job first
    - stage: "CI on amd64"
      name: "e2e test, edge test, cloud test"
      arch: amd64
      script: 
        # Now e2e_test takes the longest time, so we put it first
        - make e2e_test 
         # unit test edge
        - make edge_test 
        # unit test cloud
        - make cloud_test 
        
   
    - name: "Verify Vendor, lint, build, edge integration test, crossbuild"
      arch: amd64
      script: 
        # check if the vendor is up to date
        - make verify 
        # cloud_lint
        - make cloud_lint 
        # bluetooth_device_lint
        - make bluetoothdevice_lint 
        # keadm_lint
        - make keadm_lint 
        # edge_lint
        - make edge_lint 
        # make cloudcore edgecore edgesite keadm
        - make 
        # build bluetooth_device
        - make bluetoothdevice 
        # build small edge version
        - make edge_small_build 
        # builds cloudcore edgecore and edgesite components
        # integration test edge
        # Note: "make edge_integration_test"  and "make e2e_test" cannot run in the same job at the same time
        - make edge_integration_test 


        # cross build edge
        - make edge_cross_build 
        # cross build edge for armv7
        - make edge_cross_build_v7 
        # cross build edgesite
        - make edgesite_cross_build 
        # cross build edgeite for armv7
        - make edgesite_cross_build_v7 

    - name: "build cloud image, admissionimage, edgeimage, edgesiteimage, bluetoothdevice image" 
      arch: amd64
      script: 
        # build cloudimage
        - make cloudimage 
        # build admission image
        - make admissionimage 
        # build edge image
        - make edgeimage ARCH="amd64" 
        # build edgesite image
        - make edgesiteimage ARCH="amd64" 
        # build bluetoothdevice image
        - make bluetoothdevice_image 


    - stage: "CI on arm64"
      arch: arm64
      name: "Build components, bluetoothdevice, edge_small_build"
      script: 
        # builds cloud and edge components
        - make 
        # build bluetooth_device
        - make bluetoothdevice 
        # build small edge version
        - make edge_small_build 

    - name: "cloud test, edge test"
      arch: arm64
      script:
        # unit test cloud
        - make cloud_test  
        # unit test edge 
        - make edge_test

    - name: "build cloudimage,admissionimage,edgeimage,bluetoothdevice image, edgesiteimage"
      arch: arm64
      script:
        # build cloudimage 
        - make cloudimage 
        # build admission image
        - make admissionimage 
        # build edge image
        - make edgeimage ARCH="arm64v8" 
        # build bluetoothdevice image
        - make bluetoothdevice_image 
         # build edgesite image
        - make edgesiteimage ARCH="arm64v8" 
